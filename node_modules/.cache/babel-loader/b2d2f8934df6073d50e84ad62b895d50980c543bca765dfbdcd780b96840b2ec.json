{"ast":null,"code":"var _jsxFileName = \"/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/components/CustomizationModal/CustomizationModal.jsx\",\n  _s = $RefreshSig$();\n// src/components/CustomizationModal/CustomizationModal.jsx\nimport React, { useState, useContext, useEffect } from 'react';\nimport { X, Plus, Minus, Info, Check, Loader, Pizza, Upload } from 'lucide-react';\nimport { CartContext } from '../../context/CartContext';\nimport woocommerceApi from '../../services/woocommerceApi';\nimport './CustomizationModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomizationModal = ({\n  product,\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    addToCart\n  } = useContext(CartContext);\n\n  // Estados para datos de WooCommerce\n  const [variations, setVariations] = useState([]);\n  const [attributes, setAttributes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Estados para Advanced Product Fields\n  const [productAddons, setProductAddons] = useState([]);\n  const [addonValues, setAddonValues] = useState({});\n  const [addonFiles, setAddonFiles] = useState({});\n\n  // Estados de selección\n  const [selectedAttributes, setSelectedAttributes] = useState({});\n  const [selectedVariation, setSelectedVariation] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [specialInstructions, setSpecialInstructions] = useState('');\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [addingToCart, setAddingToCart] = useState(false);\n\n  // Reset estados cuando se abre el modal\n  useEffect(() => {\n    if (isOpen && product) {\n      resetForm();\n      loadProductData();\n    }\n  }, [isOpen, product]);\n\n  // Actualizar precio cuando cambia la selección\n  useEffect(() => {\n    updatePrice();\n  }, [selectedVariation, quantity, product, addonValues]);\n  const resetForm = () => {\n    setSelectedAttributes({});\n    setSelectedVariation(null);\n    setQuantity(1);\n    setSpecialInstructions('');\n    setProductAddons([]);\n    setAddonValues({});\n    setAddonFiles({});\n    setError(null);\n  };\n  const loadProductData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Debugging: Ver toda la estructura del producto\n      console.log('=== PRODUCTO COMPLETO ===');\n      console.log(product);\n      console.log('=== META DATA ===');\n      console.log(product.meta_data);\n      console.log('=== TODAS LAS PROPIEDADES ===');\n      console.log(Object.keys(product));\n\n      // Si es un producto variable, cargar variaciones\n      if (product.type === 'variable') {\n        const variationsData = await woocommerceApi.getProductVariations(product.id);\n        setVariations(variationsData || []);\n\n        // Extraer atributos del producto\n        if (product.attributes) {\n          const variableAttributes = product.attributes.filter(attr => attr.variation);\n          setAttributes(variableAttributes);\n\n          // Establecer valores por defecto\n          const defaultAttributes = {};\n          variableAttributes.forEach(attr => {\n            if (attr.options && attr.options.length > 0) {\n              defaultAttributes[attr.name] = attr.options[0];\n            }\n          });\n          setSelectedAttributes(defaultAttributes);\n\n          // Buscar variación por defecto\n          findMatchingVariation(defaultAttributes);\n        }\n      } else {\n        // Para productos simples, establecer el precio directamente\n        setTotalPrice(parseFloat(product.price) * quantity);\n      }\n\n      // Cargar Advanced Product Fields si existen\n      await loadProductAddons();\n    } catch (err) {\n      console.error('Error loading product data:', err);\n      setError('Error al cargar las opciones del producto. Por favor, intenta de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadProductAddons = async () => {\n    console.log('=== BUSCANDO ADDONS ===');\n\n    // Verificar si el producto tiene campos adicionales del plugin Advanced Product Fields\n    if (product.meta_data) {\n      console.log('Meta data encontrada:', product.meta_data);\n\n      // Buscar el campo _wapf_fieldgroup\n      const fieldGroupData = product.meta_data.find(meta => meta.key === '_wapf_fieldgroup');\n      if (fieldGroupData && fieldGroupData.value) {\n        console.log('Field group data encontrada:', fieldGroupData.value);\n\n        // El valor puede ser un ID de grupo o un array de IDs\n        let groupIds = [];\n        if (Array.isArray(fieldGroupData.value)) {\n          groupIds = fieldGroupData.value;\n        } else if (typeof fieldGroupData.value === 'object' && fieldGroupData.value.groups) {\n          groupIds = fieldGroupData.value.groups;\n        } else if (typeof fieldGroupData.value === 'string' || typeof fieldGroupData.value === 'number') {\n          groupIds = [fieldGroupData.value];\n        }\n        console.log('Group IDs:', groupIds);\n\n        // Si tenemos IDs de grupos, necesitamos obtener los campos de esos grupos\n        // Para esto necesitamos hacer una petición adicional o el plugin debe exponer los campos\n\n        // Por ahora, vamos a buscar si hay campos directamente en el producto\n        // El plugin también puede guardar los campos compilados en otro meta field\n        const possibleFieldKeys = ['_wapf_fields', '_wapf_field_groups_fields', 'wapf_fields', '_product_addons'];\n        for (const key of possibleFieldKeys) {\n          const fieldsData = product.meta_data.find(meta => meta.key === key);\n          if (fieldsData && fieldsData.value) {\n            console.log(`Campos encontrados con key \"${key}\":`, fieldsData.value);\n            const fields = Array.isArray(fieldsData.value) ? fieldsData.value : [fieldsData.value];\n            setProductAddons(fields);\n            initializeAddonValues(fields);\n            return;\n          }\n        }\n\n        // Si no encontramos los campos compilados, intentamos obtenerlos via API personalizada\n        if (groupIds.length > 0 || true) {\n          // Siempre intentar con la API personalizada\n          console.log('Intentando obtener campos del producto via API...');\n          console.log('ID del producto:', product.id);\n          try {\n            // Construir la URL completa\n            const apiUrl = `https://escandalosospizzas.cl/wp/wp-json/custom/v1/product-fields/${product.id}`;\n            console.log('URL de la API:', apiUrl);\n            const response = await fetch(apiUrl);\n            console.log('Status de respuesta:', response.status);\n            if (response.ok) {\n              const data = await response.json();\n              console.log('Respuesta completa de la API:', data);\n\n              // Intentar diferentes estructuras de respuesta\n              let fields = null;\n\n              // Si la respuesta es un array directo\n              if (Array.isArray(data)) {\n                fields = data;\n              }\n              // Si los campos están en data.fields\n              else if (data && data.fields) {\n                fields = data.fields;\n              }\n              // Si los campos están en data.data\n              else if (data && data.data) {\n                fields = data.data;\n              }\n              // Si la respuesta tiene una propiedad items\n              else if (data && data.items) {\n                fields = data.items;\n              }\n              // Si la respuesta tiene una propiedad addons\n              else if (data && data.addons) {\n                fields = data.addons;\n              }\n              // Si la respuesta tiene una propiedad product_fields\n              else if (data && data.product_fields) {\n                fields = data.product_fields;\n              }\n              // Si la respuesta es un objeto con campos como propiedades\n              else if (data && typeof data === 'object' && !Array.isArray(data)) {\n                // Buscar cualquier propiedad que sea un array\n                const keys = Object.keys(data);\n                for (const key of keys) {\n                  if (Array.isArray(data[key])) {\n                    console.log(`Encontrado array de campos en la propiedad: ${key}`);\n                    fields = data[key];\n                    break;\n                  }\n                }\n\n                // Si no encontramos arrays, tal vez los campos están directamente en el objeto\n                if (!fields && keys.length > 0) {\n                  // Verificar si el objeto tiene estructura de campo\n                  const firstKey = keys[0];\n                  if (data[firstKey] && (data[firstKey].type || data[firstKey].label || data[firstKey].name)) {\n                    // Convertir el objeto en array\n                    fields = Object.values(data);\n                  }\n                }\n              }\n              if (fields) {\n                console.log('Campos encontrados y procesados:', fields);\n                setProductAddons(fields);\n                initializeAddonValues(fields);\n                return;\n              } else {\n                console.log('No se pudieron extraer campos de la respuesta');\n              }\n            } else {\n              console.log('La API devolvió un error:', response.status, response.statusText);\n            }\n          } catch (error) {\n            console.log('Error obteniendo campos via API:', error);\n          }\n        }\n      }\n    }\n\n    // Si no encontramos campos via meta_data, verificar si están directamente en el producto\n    if (product.product_fields) {\n      console.log('Campos encontrados en product.product_fields:', product.product_fields);\n      setProductAddons(product.product_fields);\n      initializeAddonValues(product.product_fields);\n    } else if (product.addons) {\n      console.log('Campos encontrados en product.addons:', product.addons);\n      setProductAddons(product.addons);\n      initializeAddonValues(product.addons);\n    }\n    console.log('=== ESTADO FINAL DE ADDONS ===');\n    console.log('productAddons establecidos:', productAddons);\n  };\n  const initializeAddonValues = fields => {\n    const defaultValues = {};\n    fields.forEach(field => {\n      const fieldId = field.id || field.name || field.field_id;\n      if (field.type === 'checkbox' || field.type === 'checkboxes' || field.type === 'multiple_choice') {\n        defaultValues[fieldId] = [];\n      } else if (field.type === 'number' && field.min !== undefined) {\n        defaultValues[fieldId] = field.min;\n      } else if (field.type === 'true_false') {\n        defaultValues[fieldId] = false;\n      } else {\n        defaultValues[fieldId] = '';\n      }\n    });\n    setAddonValues(defaultValues);\n  };\n  const handleAttributeChange = (attributeName, value) => {\n    const newAttributes = {\n      ...selectedAttributes,\n      [attributeName]: value\n    };\n    setSelectedAttributes(newAttributes);\n\n    // Buscar variación que coincida con los atributos seleccionados\n    findMatchingVariation(newAttributes);\n  };\n  const findMatchingVariation = attributes => {\n    if (!variations || variations.length === 0) return;\n    const matching = variations.find(variation => {\n      return variation.attributes.every(attr => {\n        const normalizedAttrName = attr.name.toLowerCase().replace(/-/g, ' ');\n        const selectedValue = attributes[attr.name] || attributes[normalizedAttrName];\n        return selectedValue == attr.option;\n      });\n    });\n    setSelectedVariation(matching || null);\n  };\n  const handleAddonChange = (fieldId, value) => {\n    setAddonValues(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n  };\n  const handleFileUpload = (fieldId, file) => {\n    if (file) {\n      setAddonFiles(prev => ({\n        ...prev,\n        [fieldId]: file\n      }));\n      setAddonValues(prev => ({\n        ...prev,\n        [fieldId]: file.name\n      }));\n    }\n  };\n  const calculateAddonPrice = () => {\n    let addonTotal = 0;\n    productAddons.forEach(addon => {\n      const fieldId = addon.id || addon.name;\n      const value = addonValues[fieldId];\n      if (!value || Array.isArray(value) && value.length === 0) return;\n\n      // Precio fijo\n      if (addon.price_type === 'flat_fee' && addon.price) {\n        addonTotal += parseFloat(addon.price);\n      }\n\n      // Precio basado en cantidad\n      else if (addon.price_type === 'quantity_based' && addon.price) {\n        addonTotal += parseFloat(addon.price) * quantity;\n      }\n\n      // Precio por carácter (para campos de texto)\n      else if (addon.price_type === 'per_char' && addon.price && typeof value === 'string') {\n        addonTotal += parseFloat(addon.price) * value.length;\n      }\n\n      // Para campos con opciones (radio, select, checkbox)\n      else if (addon.options && Array.isArray(addon.options)) {\n        addon.options.forEach(option => {\n          const isSelected = Array.isArray(value) ? value.includes(option.label || option.value) : value === (option.label || option.value);\n          if (isSelected && option.price) {\n            if (option.price_type === 'quantity_based') {\n              addonTotal += parseFloat(option.price) * quantity;\n            } else {\n              addonTotal += parseFloat(option.price);\n            }\n          }\n        });\n      }\n    });\n    return addonTotal;\n  };\n  const updatePrice = () => {\n    let basePrice = 0;\n    if (selectedVariation && selectedVariation.price) {\n      basePrice = parseFloat(selectedVariation.price);\n    } else if (product && product.price) {\n      basePrice = parseFloat(product.price);\n    }\n    const addonPrice = calculateAddonPrice();\n    setTotalPrice((basePrice + addonPrice) * quantity);\n  };\n  const formatPrice = price => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(price);\n  };\n  const isValidSelection = () => {\n    if (product.type === 'variable') {\n      // Para productos variables, verificar que se haya seleccionado una variación válida\n      if (!selectedVariation || selectedVariation.stock_status === 'outofstock') {\n        return false;\n      }\n    }\n\n    // Validar campos requeridos de Advanced Product Fields\n    for (const addon of productAddons) {\n      if (addon.required) {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        if (!value || Array.isArray(value) && value.length === 0) {\n          setError(`Por favor, completa el campo: ${addon.title || addon.name}`);\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  const handleAddToCart = async () => {\n    if (!isValidSelection()) {\n      if (!error) {\n        setError('Por favor, selecciona todas las opciones requeridas');\n      }\n      return;\n    }\n    setAddingToCart(true);\n    try {\n      var _selectedVariation$im, _product$images, _product$images$;\n      // Preparar meta_data para Advanced Product Fields\n      const addonMetaData = [];\n      productAddons.forEach(addon => {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        if (value && !(Array.isArray(value) && value.length === 0)) {\n          // Agregar el campo a meta_data\n          addonMetaData.push({\n            key: addon.name || addon.title,\n            value: Array.isArray(value) ? value.join(', ') : value,\n            display: addon.title || addon.name,\n            price: addon.price || 0,\n            price_type: addon.price_type || 'flat_fee'\n          });\n        }\n      });\n      const cartItem = {\n        id: selectedVariation ? `${product.id}-${selectedVariation.id}-${Date.now()}` : `${product.id}-${Date.now()}`,\n        productId: product.id,\n        variationId: selectedVariation === null || selectedVariation === void 0 ? void 0 : selectedVariation.id,\n        name: product.name,\n        price: totalPrice / quantity,\n        // Precio unitario incluyendo addons\n        image: (selectedVariation === null || selectedVariation === void 0 ? void 0 : (_selectedVariation$im = selectedVariation.image) === null || _selectedVariation$im === void 0 ? void 0 : _selectedVariation$im.src) || ((_product$images = product.images) === null || _product$images === void 0 ? void 0 : (_product$images$ = _product$images[0]) === null || _product$images$ === void 0 ? void 0 : _product$images$.src) || '',\n        quantity,\n        customizations: {\n          attributes: selectedAttributes,\n          specialInstructions: specialInstructions.trim(),\n          variationDetails: selectedVariation ? {\n            name: selectedVariation.name,\n            attributes: selectedVariation.attributes\n          } : null,\n          // Agregar datos de Advanced Product Fields\n          productAddons: addonMetaData,\n          addonValues: addonValues,\n          addonFiles: Object.keys(addonFiles).length > 0 ? addonFiles : null\n        }\n      };\n      addToCart(cartItem);\n\n      // Mostrar mensaje de éxito\n      setTimeout(() => {\n        onClose();\n        resetForm();\n      }, 500);\n    } catch (err) {\n      setError('Error al agregar al carrito. Por favor, intenta de nuevo.');\n    } finally {\n      setAddingToCart(false);\n    }\n  };\n  const renderAddonField = addon => {\n    var _addon$options, _addon$options2, _addon$options3;\n    const fieldId = addon.id || addon.name;\n    const value = addonValues[fieldId] || '';\n    switch (addon.type) {\n      case 'text':\n      case 'custom_text':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          placeholder: addon.placeholder || '',\n          maxLength: addon.max || undefined,\n          className: \"addon-text-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this);\n      case 'textarea':\n      case 'custom_textarea':\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          placeholder: addon.placeholder || '',\n          maxLength: addon.max || undefined,\n          rows: 4,\n          className: \"addon-textarea\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, parseFloat(e.target.value) || 0),\n          min: addon.min || undefined,\n          max: addon.max || undefined,\n          step: addon.step || 1,\n          className: \"addon-number-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          placeholder: addon.placeholder || 'email@ejemplo.com',\n          className: \"addon-email-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this);\n      case 'select':\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          className: \"addon-select\",\n          required: addon.required,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una opci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), (_addon$options = addon.options) === null || _addon$options === void 0 ? void 0 : _addon$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.label || option.value,\n            children: [option.label || option.value, option.price && option.price > 0 && ` (+${formatPrice(option.price)})`]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this);\n      case 'radio':\n      case 'radiobutton':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addon-radio-group\",\n          children: (_addon$options2 = addon.options) === null || _addon$options2 === void 0 ? void 0 : _addon$options2.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"addon-radio-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: fieldId,\n              value: option.label || option.value,\n              checked: value === (option.label || option.value),\n              onChange: e => handleAddonChange(fieldId, e.target.value),\n              required: addon.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-label\",\n              children: [option.label || option.value, option.price && option.price > 0 && ` (+${formatPrice(option.price)})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this);\n      case 'checkbox':\n      case 'checkboxes':\n      case 'multiple_choice':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addon-checkbox-group\",\n          children: (_addon$options3 = addon.options) === null || _addon$options3 === void 0 ? void 0 : _addon$options3.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"addon-checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: option.label || option.value,\n              checked: Array.isArray(value) && value.includes(option.label || option.value),\n              onChange: e => {\n                const optionValue = option.label || option.value;\n                const currentValues = Array.isArray(value) ? value : [];\n                if (e.target.checked) {\n                  handleAddonChange(fieldId, [...currentValues, optionValue]);\n                } else {\n                  handleAddonChange(fieldId, currentValues.filter(v => v !== optionValue));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkbox-label\",\n              children: [option.label || option.value, option.price && option.price > 0 && ` (+${formatPrice(option.price)})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this);\n      case 'file':\n      case 'file_upload':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addon-file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-upload-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => handleFileUpload(fieldId, e.target.files[0]),\n              accept: addon.allowed_types || '*',\n              required: addon.required,\n              className: \"file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-upload-button\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this), addonFiles[fieldId] ? addonFiles[fieldId].name : 'Seleccionar archivo']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), addon.max_size && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-size-info\",\n            children: [\"Tama\\xF1o m\\xE1ximo: \", addon.max_size, \"MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this);\n      case 'color':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: value || '#000000',\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          className: \"addon-color-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this);\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          min: addon.min_date || undefined,\n          max: addon.max_date || undefined,\n          className: \"addon-date-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this);\n      case 'true_false':\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"addon-checkbox-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: value === true,\n            onChange: e => handleAddonChange(fieldId, e.target.checked),\n            required: addon.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkbox-label\",\n            children: addon.true_label || 'Sí'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this);\n      default:\n        console.log(`Tipo de campo no reconocido: ${addon.type}`);\n        return null;\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customization-modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customization-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Personalizar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"loading-spinner\",\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cargando opciones...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadProductData,\n          className: \"retry-button\",\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-product-info\",\n          children: [product.images && product.images[0] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.images[0].src,\n            alt: product.name,\n            className: \"customization-product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customization-product-image placeholder\",\n            children: /*#__PURE__*/_jsxDEV(Pizza, {\n              size: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this), product.short_description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"product-description\",\n              dangerouslySetInnerHTML: {\n                __html: product.short_description\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this), attributes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-section\",\n          children: attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attribute-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: attribute.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 21\n            }, this), attribute.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"section-description\",\n              children: attribute.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attribute-options\",\n              children: attribute.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"attribute-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: attribute.name,\n                  value: option,\n                  checked: selectedAttributes[attribute.name] === option,\n                  onChange: () => handleAttributeChange(attribute.name, option)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"option-check\",\n                    children: /*#__PURE__*/_jsxDEV(Check, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 29\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 27\n                }, this)]\n              }, option, true, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 21\n            }, this)]\n          }, attribute.id || attribute.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 15\n        }, this), productAddons.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Opciones adicionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this), productAddons.map((addon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addon-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"addon-label\",\n              children: [addon.title || addon.name, addon.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 42\n              }, this), addon.price && addon.price > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"addon-price\",\n                children: addon.price_type === 'quantity_based' ? ` (+${formatPrice(addon.price)} por unidad)` : ` (+${formatPrice(addon.price)})`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 21\n            }, this), addon.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"addon-description\",\n              children: addon.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 23\n            }, this), renderAddonField(addon)]\n          }, addon.id || addon.name || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 15\n        }, this), selectedVariation && (selectedVariation.stock_status === 'outofstock' || selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"variation-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"variation-details\",\n            children: selectedVariation.stock_status === 'outofstock' ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"out-of-stock\",\n              children: \"\\u26A0\\uFE0F Producto agotado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 21\n            }, this) : selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"low-stock\",\n              children: [\"\\u26A1 \\xDAltimas \", selectedVariation.stock_quantity, \" unidades\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instrucciones especiales (opcional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: \"\\xBFAlguna preferencia especial?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"special-instructions\",\n            value: specialInstructions,\n            onChange: e => setSpecialInstructions(e.target.value),\n            placeholder: \"Ej: Sin cebolla, extra queso, etc.\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-price-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Cantidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setQuantity(Math.max(1, quantity - 1)),\n                disabled: quantity <= 1,\n                children: /*#__PURE__*/_jsxDEV(Minus, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quantity-value\",\n                children: quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setQuantity(quantity + 1),\n                disabled: (selectedVariation === null || selectedVariation === void 0 ? void 0 : selectedVariation.stock_status) === 'outofstock',\n                children: /*#__PURE__*/_jsxDEV(Plus, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 828,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"total-price\",\n              children: formatPrice(totalPrice)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `add-to-cart-button ${addingToCart ? 'loading' : ''}`,\n          onClick: handleAddToCart,\n          disabled: addingToCart || (selectedVariation === null || selectedVariation === void 0 ? void 0 : selectedVariation.stock_status) === 'outofstock',\n          children: addingToCart ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader, {\n              className: \"button-spinner\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 19\n            }, this), \"Agregando...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 19\n            }, this), \"Agregar al Carrito\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 679,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomizationModal, \"4XaR/Sq9+ME7045Ck6oUWYvYuN0=\");\n_c = CustomizationModal;\nexport default CustomizationModal;\nvar _c;\n$RefreshReg$(_c, \"CustomizationModal\");","map":{"version":3,"names":["React","useState","useContext","useEffect","X","Plus","Minus","Info","Check","Loader","Pizza","Upload","CartContext","woocommerceApi","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomizationModal","product","isOpen","onClose","_s","addToCart","variations","setVariations","attributes","setAttributes","loading","setLoading","error","setError","productAddons","setProductAddons","addonValues","setAddonValues","addonFiles","setAddonFiles","selectedAttributes","setSelectedAttributes","selectedVariation","setSelectedVariation","quantity","setQuantity","specialInstructions","setSpecialInstructions","totalPrice","setTotalPrice","addingToCart","setAddingToCart","resetForm","loadProductData","updatePrice","console","log","meta_data","Object","keys","type","variationsData","getProductVariations","id","variableAttributes","filter","attr","variation","defaultAttributes","forEach","options","length","name","findMatchingVariation","parseFloat","price","loadProductAddons","err","fieldGroupData","find","meta","key","value","groupIds","Array","isArray","groups","possibleFieldKeys","fieldsData","fields","initializeAddonValues","apiUrl","response","fetch","status","ok","data","json","items","addons","product_fields","firstKey","label","values","statusText","defaultValues","field","fieldId","field_id","min","undefined","handleAttributeChange","attributeName","newAttributes","matching","every","normalizedAttrName","toLowerCase","replace","selectedValue","option","handleAddonChange","prev","handleFileUpload","file","calculateAddonPrice","addonTotal","addon","price_type","isSelected","includes","basePrice","addonPrice","formatPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isValidSelection","stock_status","required","title","handleAddToCart","_selectedVariation$im","_product$images","_product$images$","addonMetaData","push","join","display","cartItem","Date","now","productId","variationId","image","src","images","customizations","trim","variationDetails","setTimeout","renderAddonField","_addon$options","_addon$options2","_addon$options3","onChange","e","target","placeholder","maxLength","max","className","fileName","_jsxFileName","lineNumber","columnNumber","rows","step","children","map","index","checked","optionValue","currentValues","v","files","accept","allowed_types","size","max_size","min_date","max_date","true_label","onClick","stopPropagation","alt","short_description","dangerouslySetInnerHTML","__html","attribute","description","stock_quantity","Math","disabled","ShoppingCart","_c","$RefreshReg$"],"sources":["/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/components/CustomizationModal/CustomizationModal.jsx"],"sourcesContent":["// src/components/CustomizationModal/CustomizationModal.jsx\nimport React, { useState, useContext, useEffect } from 'react';\nimport { X, Plus, Minus, Info, Check, Loader, Pizza, Upload } from 'lucide-react';\nimport { CartContext } from '../../context/CartContext';\nimport woocommerceApi from '../../services/woocommerceApi';\nimport './CustomizationModal.css';\n\nconst CustomizationModal = ({ product, isOpen, onClose }) => {\n  const { addToCart } = useContext(CartContext);\n  \n  // Estados para datos de WooCommerce\n  const [variations, setVariations] = useState([]);\n  const [attributes, setAttributes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Estados para Advanced Product Fields\n  const [productAddons, setProductAddons] = useState([]);\n  const [addonValues, setAddonValues] = useState({});\n  const [addonFiles, setAddonFiles] = useState({});\n  \n  // Estados de selección\n  const [selectedAttributes, setSelectedAttributes] = useState({});\n  const [selectedVariation, setSelectedVariation] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [specialInstructions, setSpecialInstructions] = useState('');\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [addingToCart, setAddingToCart] = useState(false);\n\n  // Reset estados cuando se abre el modal\n  useEffect(() => {\n    if (isOpen && product) {\n      resetForm();\n      loadProductData();\n    }\n  }, [isOpen, product]);\n\n  // Actualizar precio cuando cambia la selección\n  useEffect(() => {\n    updatePrice();\n  }, [selectedVariation, quantity, product, addonValues]);\n\n  const resetForm = () => {\n    setSelectedAttributes({});\n    setSelectedVariation(null);\n    setQuantity(1);\n    setSpecialInstructions('');\n    setProductAddons([]);\n    setAddonValues({});\n    setAddonFiles({});\n    setError(null);\n  };\n\n  const loadProductData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Debugging: Ver toda la estructura del producto\n      console.log('=== PRODUCTO COMPLETO ===');\n      console.log(product);\n      console.log('=== META DATA ===');\n      console.log(product.meta_data);\n      console.log('=== TODAS LAS PROPIEDADES ===');\n      console.log(Object.keys(product));\n      \n      // Si es un producto variable, cargar variaciones\n      if (product.type === 'variable') {\n        const variationsData = await woocommerceApi.getProductVariations(product.id);\n        setVariations(variationsData || []);\n        \n        // Extraer atributos del producto\n        if (product.attributes) {\n          const variableAttributes = product.attributes.filter(attr => attr.variation);\n          setAttributes(variableAttributes);\n          \n          // Establecer valores por defecto\n          const defaultAttributes = {};\n          variableAttributes.forEach(attr => {\n            if (attr.options && attr.options.length > 0) {\n              defaultAttributes[attr.name] = attr.options[0];\n            }\n          });\n          setSelectedAttributes(defaultAttributes);\n          \n          // Buscar variación por defecto\n          findMatchingVariation(defaultAttributes);\n        }\n      } else {\n        // Para productos simples, establecer el precio directamente\n        setTotalPrice(parseFloat(product.price) * quantity);\n      }\n\n      // Cargar Advanced Product Fields si existen\n      await loadProductAddons();\n      \n    } catch (err) {\n      console.error('Error loading product data:', err);\n      setError('Error al cargar las opciones del producto. Por favor, intenta de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadProductAddons = async () => {\n    console.log('=== BUSCANDO ADDONS ===');\n    \n    // Verificar si el producto tiene campos adicionales del plugin Advanced Product Fields\n    if (product.meta_data) {\n      console.log('Meta data encontrada:', product.meta_data);\n      \n      // Buscar el campo _wapf_fieldgroup\n      const fieldGroupData = product.meta_data.find(meta => meta.key === '_wapf_fieldgroup');\n      \n      if (fieldGroupData && fieldGroupData.value) {\n        console.log('Field group data encontrada:', fieldGroupData.value);\n        \n        // El valor puede ser un ID de grupo o un array de IDs\n        let groupIds = [];\n        if (Array.isArray(fieldGroupData.value)) {\n          groupIds = fieldGroupData.value;\n        } else if (typeof fieldGroupData.value === 'object' && fieldGroupData.value.groups) {\n          groupIds = fieldGroupData.value.groups;\n        } else if (typeof fieldGroupData.value === 'string' || typeof fieldGroupData.value === 'number') {\n          groupIds = [fieldGroupData.value];\n        }\n        \n        console.log('Group IDs:', groupIds);\n        \n        // Si tenemos IDs de grupos, necesitamos obtener los campos de esos grupos\n        // Para esto necesitamos hacer una petición adicional o el plugin debe exponer los campos\n        \n        // Por ahora, vamos a buscar si hay campos directamente en el producto\n        // El plugin también puede guardar los campos compilados en otro meta field\n        const possibleFieldKeys = [\n          '_wapf_fields',\n          '_wapf_field_groups_fields',\n          'wapf_fields',\n          '_product_addons'\n        ];\n        \n        for (const key of possibleFieldKeys) {\n          const fieldsData = product.meta_data.find(meta => meta.key === key);\n          if (fieldsData && fieldsData.value) {\n            console.log(`Campos encontrados con key \"${key}\":`, fieldsData.value);\n            const fields = Array.isArray(fieldsData.value) ? fieldsData.value : [fieldsData.value];\n            setProductAddons(fields);\n            initializeAddonValues(fields);\n            return;\n          }\n        }\n        \n        // Si no encontramos los campos compilados, intentamos obtenerlos via API personalizada\n        if (groupIds.length > 0 || true) { // Siempre intentar con la API personalizada\n          console.log('Intentando obtener campos del producto via API...');\n          console.log('ID del producto:', product.id);\n          \n          try {\n            // Construir la URL completa\n            const apiUrl = `https://escandalosospizzas.cl/wp/wp-json/custom/v1/product-fields/${product.id}`;\n            console.log('URL de la API:', apiUrl);\n            \n            const response = await fetch(apiUrl);\n            console.log('Status de respuesta:', response.status);\n            \n            if (response.ok) {\n              const data = await response.json();\n              console.log('Respuesta completa de la API:', data);\n              \n              // Intentar diferentes estructuras de respuesta\n              let fields = null;\n              \n              // Si la respuesta es un array directo\n              if (Array.isArray(data)) {\n                fields = data;\n              }\n              // Si los campos están en data.fields\n              else if (data && data.fields) {\n                fields = data.fields;\n              }\n              // Si los campos están en data.data\n              else if (data && data.data) {\n                fields = data.data;\n              }\n              // Si la respuesta tiene una propiedad items\n              else if (data && data.items) {\n                fields = data.items;\n              }\n              // Si la respuesta tiene una propiedad addons\n              else if (data && data.addons) {\n                fields = data.addons;\n              }\n              // Si la respuesta tiene una propiedad product_fields\n              else if (data && data.product_fields) {\n                fields = data.product_fields;\n              }\n              // Si la respuesta es un objeto con campos como propiedades\n              else if (data && typeof data === 'object' && !Array.isArray(data)) {\n                // Buscar cualquier propiedad que sea un array\n                const keys = Object.keys(data);\n                for (const key of keys) {\n                  if (Array.isArray(data[key])) {\n                    console.log(`Encontrado array de campos en la propiedad: ${key}`);\n                    fields = data[key];\n                    break;\n                  }\n                }\n                \n                // Si no encontramos arrays, tal vez los campos están directamente en el objeto\n                if (!fields && keys.length > 0) {\n                  // Verificar si el objeto tiene estructura de campo\n                  const firstKey = keys[0];\n                  if (data[firstKey] && (data[firstKey].type || data[firstKey].label || data[firstKey].name)) {\n                    // Convertir el objeto en array\n                    fields = Object.values(data);\n                  }\n                }\n              }\n              \n              if (fields) {\n                console.log('Campos encontrados y procesados:', fields);\n                setProductAddons(fields);\n                initializeAddonValues(fields);\n                return;\n              } else {\n                console.log('No se pudieron extraer campos de la respuesta');\n              }\n            } else {\n              console.log('La API devolvió un error:', response.status, response.statusText);\n            }\n          } catch (error) {\n            console.log('Error obteniendo campos via API:', error);\n          }\n        }\n      }\n    }\n    \n    // Si no encontramos campos via meta_data, verificar si están directamente en el producto\n    if (product.product_fields) {\n      console.log('Campos encontrados en product.product_fields:', product.product_fields);\n      setProductAddons(product.product_fields);\n      initializeAddonValues(product.product_fields);\n    } else if (product.addons) {\n      console.log('Campos encontrados en product.addons:', product.addons);\n      setProductAddons(product.addons);\n      initializeAddonValues(product.addons);\n    }\n    \n    console.log('=== ESTADO FINAL DE ADDONS ===');\n    console.log('productAddons establecidos:', productAddons);\n  };\n\n  const initializeAddonValues = (fields) => {\n    const defaultValues = {};\n    fields.forEach(field => {\n      const fieldId = field.id || field.name || field.field_id;\n      \n      if (field.type === 'checkbox' || field.type === 'checkboxes' || field.type === 'multiple_choice') {\n        defaultValues[fieldId] = [];\n      } else if (field.type === 'number' && field.min !== undefined) {\n        defaultValues[fieldId] = field.min;\n      } else if (field.type === 'true_false') {\n        defaultValues[fieldId] = false;\n      } else {\n        defaultValues[fieldId] = '';\n      }\n    });\n    setAddonValues(defaultValues);\n  };\n\n  const handleAttributeChange = (attributeName, value) => {\n    const newAttributes = {\n      ...selectedAttributes,\n      [attributeName]: value\n    };\n    setSelectedAttributes(newAttributes);\n    \n    // Buscar variación que coincida con los atributos seleccionados\n    findMatchingVariation(newAttributes);\n  };\n\n  const findMatchingVariation = (attributes) => {\n    if (!variations || variations.length === 0) return;\n    \n    const matching = variations.find(variation => {\n      return variation.attributes.every(attr => {\n        const normalizedAttrName = attr.name.toLowerCase().replace(/-/g, ' ');\n        const selectedValue = attributes[attr.name] || attributes[normalizedAttrName];\n        return selectedValue == attr.option;\n      });\n    });\n    \n    setSelectedVariation(matching || null);\n  };\n\n  const handleAddonChange = (fieldId, value) => {\n    setAddonValues(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n  };\n\n  const handleFileUpload = (fieldId, file) => {\n    if (file) {\n      setAddonFiles(prev => ({\n        ...prev,\n        [fieldId]: file\n      }));\n      setAddonValues(prev => ({\n        ...prev,\n        [fieldId]: file.name\n      }));\n    }\n  };\n\n  const calculateAddonPrice = () => {\n    let addonTotal = 0;\n    \n    productAddons.forEach(addon => {\n      const fieldId = addon.id || addon.name;\n      const value = addonValues[fieldId];\n      \n      if (!value || (Array.isArray(value) && value.length === 0)) return;\n      \n      // Precio fijo\n      if (addon.price_type === 'flat_fee' && addon.price) {\n        addonTotal += parseFloat(addon.price);\n      }\n      \n      // Precio basado en cantidad\n      else if (addon.price_type === 'quantity_based' && addon.price) {\n        addonTotal += parseFloat(addon.price) * quantity;\n      }\n      \n      // Precio por carácter (para campos de texto)\n      else if (addon.price_type === 'per_char' && addon.price && typeof value === 'string') {\n        addonTotal += parseFloat(addon.price) * value.length;\n      }\n      \n      // Para campos con opciones (radio, select, checkbox)\n      else if (addon.options && Array.isArray(addon.options)) {\n        addon.options.forEach(option => {\n          const isSelected = Array.isArray(value) \n            ? value.includes(option.label || option.value)\n            : value === (option.label || option.value);\n            \n          if (isSelected && option.price) {\n            if (option.price_type === 'quantity_based') {\n              addonTotal += parseFloat(option.price) * quantity;\n            } else {\n              addonTotal += parseFloat(option.price);\n            }\n          }\n        });\n      }\n    });\n    \n    return addonTotal;\n  };\n\n  const updatePrice = () => {\n    let basePrice = 0;\n    \n    if (selectedVariation && selectedVariation.price) {\n      basePrice = parseFloat(selectedVariation.price);\n    } else if (product && product.price) {\n      basePrice = parseFloat(product.price);\n    }\n    \n    const addonPrice = calculateAddonPrice();\n    setTotalPrice((basePrice + addonPrice) * quantity);\n  };\n\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const isValidSelection = () => {\n    if (product.type === 'variable') {\n      // Para productos variables, verificar que se haya seleccionado una variación válida\n      if (!selectedVariation || selectedVariation.stock_status === 'outofstock') {\n        return false;\n      }\n    }\n    \n    // Validar campos requeridos de Advanced Product Fields\n    for (const addon of productAddons) {\n      if (addon.required) {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        \n        if (!value || (Array.isArray(value) && value.length === 0)) {\n          setError(`Por favor, completa el campo: ${addon.title || addon.name}`);\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  };\n\n  const handleAddToCart = async () => {\n    if (!isValidSelection()) {\n      if (!error) {\n        setError('Por favor, selecciona todas las opciones requeridas');\n      }\n      return;\n    }\n\n    setAddingToCart(true);\n\n    try {\n      // Preparar meta_data para Advanced Product Fields\n      const addonMetaData = [];\n      \n      productAddons.forEach(addon => {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        \n        if (value && !(Array.isArray(value) && value.length === 0)) {\n          // Agregar el campo a meta_data\n          addonMetaData.push({\n            key: addon.name || addon.title,\n            value: Array.isArray(value) ? value.join(', ') : value,\n            display: addon.title || addon.name,\n            price: addon.price || 0,\n            price_type: addon.price_type || 'flat_fee'\n          });\n        }\n      });\n\n      const cartItem = {\n        id: selectedVariation ? `${product.id}-${selectedVariation.id}-${Date.now()}` : `${product.id}-${Date.now()}`,\n        productId: product.id,\n        variationId: selectedVariation?.id,\n        name: product.name,\n        price: totalPrice / quantity, // Precio unitario incluyendo addons\n        image: selectedVariation?.image?.src || product.images?.[0]?.src || '',\n        quantity,\n        customizations: {\n          attributes: selectedAttributes,\n          specialInstructions: specialInstructions.trim(),\n          variationDetails: selectedVariation ? {\n            name: selectedVariation.name,\n            attributes: selectedVariation.attributes\n          } : null,\n          // Agregar datos de Advanced Product Fields\n          productAddons: addonMetaData,\n          addonValues: addonValues,\n          addonFiles: Object.keys(addonFiles).length > 0 ? addonFiles : null\n        }\n      };\n\n      addToCart(cartItem);\n      \n      // Mostrar mensaje de éxito\n      setTimeout(() => {\n        onClose();\n        resetForm();\n      }, 500);\n      \n    } catch (err) {\n      setError('Error al agregar al carrito. Por favor, intenta de nuevo.');\n    } finally {\n      setAddingToCart(false);\n    }\n  };\n\n  const renderAddonField = (addon) => {\n    const fieldId = addon.id || addon.name;\n    const value = addonValues[fieldId] || '';\n    \n    switch (addon.type) {\n      case 'text':\n      case 'custom_text':\n        return (\n          <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            placeholder={addon.placeholder || ''}\n            maxLength={addon.max || undefined}\n            className=\"addon-text-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'textarea':\n      case 'custom_textarea':\n        return (\n          <textarea\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            placeholder={addon.placeholder || ''}\n            maxLength={addon.max || undefined}\n            rows={4}\n            className=\"addon-textarea\"\n            required={addon.required}\n          />\n        );\n        \n      case 'number':\n        return (\n          <input\n            type=\"number\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, parseFloat(e.target.value) || 0)}\n            min={addon.min || undefined}\n            max={addon.max || undefined}\n            step={addon.step || 1}\n            className=\"addon-number-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'email':\n        return (\n          <input\n            type=\"email\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            placeholder={addon.placeholder || 'email@ejemplo.com'}\n            className=\"addon-email-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'select':\n      case 'dropdown':\n        return (\n          <select\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            className=\"addon-select\"\n            required={addon.required}\n          >\n            <option value=\"\">Selecciona una opción</option>\n            {addon.options?.map((option, index) => (\n              <option key={index} value={option.label || option.value}>\n                {option.label || option.value}\n                {option.price && option.price > 0 && ` (+${formatPrice(option.price)})`}\n              </option>\n            ))}\n          </select>\n        );\n        \n      case 'radio':\n      case 'radiobutton':\n        return (\n          <div className=\"addon-radio-group\">\n            {addon.options?.map((option, index) => (\n              <label key={index} className=\"addon-radio-option\">\n                <input\n                  type=\"radio\"\n                  name={fieldId}\n                  value={option.label || option.value}\n                  checked={value === (option.label || option.value)}\n                  onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n                  required={addon.required}\n                />\n                <span className=\"radio-label\">\n                  {option.label || option.value}\n                  {option.price && option.price > 0 && ` (+${formatPrice(option.price)})`}\n                </span>\n              </label>\n            ))}\n          </div>\n        );\n        \n      case 'checkbox':\n      case 'checkboxes':\n      case 'multiple_choice':\n        return (\n          <div className=\"addon-checkbox-group\">\n            {addon.options?.map((option, index) => (\n              <label key={index} className=\"addon-checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  value={option.label || option.value}\n                  checked={Array.isArray(value) && value.includes(option.label || option.value)}\n                  onChange={(e) => {\n                    const optionValue = option.label || option.value;\n                    const currentValues = Array.isArray(value) ? value : [];\n                    \n                    if (e.target.checked) {\n                      handleAddonChange(fieldId, [...currentValues, optionValue]);\n                    } else {\n                      handleAddonChange(fieldId, currentValues.filter(v => v !== optionValue));\n                    }\n                  }}\n                />\n                <span className=\"checkbox-label\">\n                  {option.label || option.value}\n                  {option.price && option.price > 0 && ` (+${formatPrice(option.price)})`}\n                </span>\n              </label>\n            ))}\n          </div>\n        );\n        \n      case 'file':\n      case 'file_upload':\n        return (\n          <div className=\"addon-file-upload\">\n            <label className=\"file-upload-label\">\n              <input\n                type=\"file\"\n                onChange={(e) => handleFileUpload(fieldId, e.target.files[0])}\n                accept={addon.allowed_types || '*'}\n                required={addon.required}\n                className=\"file-input\"\n              />\n              <span className=\"file-upload-button\">\n                <Upload size={16} />\n                {addonFiles[fieldId] ? addonFiles[fieldId].name : 'Seleccionar archivo'}\n              </span>\n            </label>\n            {addon.max_size && (\n              <p className=\"file-size-info\">\n                Tamaño máximo: {addon.max_size}MB\n              </p>\n            )}\n          </div>\n        );\n        \n      case 'color':\n        return (\n          <input\n            type=\"color\"\n            value={value || '#000000'}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            className=\"addon-color-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'date':\n        return (\n          <input\n            type=\"date\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            min={addon.min_date || undefined}\n            max={addon.max_date || undefined}\n            className=\"addon-date-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'true_false':\n        return (\n          <label className=\"addon-checkbox-option\">\n            <input\n              type=\"checkbox\"\n              checked={value === true}\n              onChange={(e) => handleAddonChange(fieldId, e.target.checked)}\n              required={addon.required}\n            />\n            <span className=\"checkbox-label\">\n              {addon.true_label || 'Sí'}\n            </span>\n          </label>\n        );\n        \n      default:\n        console.log(`Tipo de campo no reconocido: ${addon.type}`);\n        return null;\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"customization-modal-overlay\" onClick={onClose}>\n      <div className=\"customization-modal\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"modal-close\" onClick={onClose}>\n          <X size={24} />\n        </button>\n        \n        <h2>Personalizar Pedido</h2>\n        \n        {loading ? (\n          <div className=\"loading-container\">\n            <Loader className=\"loading-spinner\" size={48} />\n            <p>Cargando opciones...</p>\n          </div>\n        ) : error ? (\n          <div className=\"error-container\">\n            <p className=\"error-message\">{error}</p>\n            <button onClick={loadProductData} className=\"retry-button\">\n              Reintentar\n            </button>\n          </div>\n        ) : (\n          <>\n            {/* Información del producto */}\n            <div className=\"customization-product-info\">\n              {product.images && product.images[0] ? (\n                <img \n                  src={product.images[0].src} \n                  alt={product.name} \n                  className=\"customization-product-image\"\n                />\n              ) : (\n                <div className=\"customization-product-image placeholder\">\n                  <Pizza size={48} />\n                </div>\n              )}\n              <div className=\"product-details\">\n                <h3>{product.name}</h3>\n                {product.short_description && (\n                  <p className=\"product-description\" \n                     dangerouslySetInnerHTML={{ __html: product.short_description }} />\n                )}\n              </div>\n            </div>\n\n            {/* Atributos de variación */}\n            {attributes.length > 0 && (\n              <div className=\"customization-section\">\n                {attributes.map(attribute => (\n                  <div key={attribute.id || attribute.name} className=\"attribute-section\">\n                    <h4>{attribute.name}</h4>\n                    {attribute.description && (\n                      <p className=\"section-description\">{attribute.description}</p>\n                    )}\n                    <div className=\"attribute-options\">\n                      {attribute.options.map(option => (\n                        <label key={option} className=\"attribute-option\">\n                          <input\n                            type=\"radio\"\n                            name={attribute.name}\n                            value={option}\n                            checked={selectedAttributes[attribute.name] === option}\n                            onChange={() => handleAttributeChange(attribute.name, option)}\n                          />\n                          <span className=\"option-label\">\n                            <span className=\"option-check\">\n                              <Check size={16} />\n                            </span>\n                            {option}\n                          </span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Advanced Product Fields */}\n            {productAddons.length > 0 && (\n              <div className=\"customization-section\">\n                <h4>Opciones adicionales</h4>\n                {productAddons.map((addon, index) => (\n                  <div key={addon.id || addon.name || index} className=\"addon-field\">\n                    <label className=\"addon-label\">\n                      {addon.title || addon.name}\n                      {addon.required && <span className=\"required\">*</span>}\n                      {addon.price && addon.price > 0 && (\n                        <span className=\"addon-price\">\n                          {addon.price_type === 'quantity_based' \n                            ? ` (+${formatPrice(addon.price)} por unidad)`\n                            : ` (+${formatPrice(addon.price)})`\n                          }\n                        </span>\n                      )}\n                    </label>\n                    {addon.description && (\n                      <p className=\"addon-description\">{addon.description}</p>\n                    )}\n                    {renderAddonField(addon)}\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Mostrar información de la variación seleccionada */}\n            {selectedVariation && (selectedVariation.stock_status === 'outofstock' || \n              (selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10)) && (\n              <div className=\"variation-info\">\n                <div className=\"variation-details\">\n                  {selectedVariation.stock_status === 'outofstock' ? (\n                    <p className=\"out-of-stock\">⚠️ Producto agotado</p>\n                  ) : selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10 ? (\n                    <p className=\"low-stock\">⚡ Últimas {selectedVariation.stock_quantity} unidades</p>\n                  ) : null}\n                </div>\n              </div>\n            )}\n\n            {/* Instrucciones especiales */}\n            <div className=\"customization-section\">\n              <h4>Instrucciones especiales (opcional)</h4>\n              <p className=\"section-description\">\n                ¿Alguna preferencia especial?\n              </p>\n              <textarea\n                className=\"special-instructions\"\n                value={specialInstructions}\n                onChange={(e) => setSpecialInstructions(e.target.value)}\n                placeholder=\"Ej: Sin cebolla, extra queso, etc.\"\n                rows={3}\n              />\n            </div>\n\n            {/* Cantidad y precio */}\n            <div className=\"quantity-price-section\">\n              <div className=\"quantity-selector\">\n                <h4>Cantidad</h4>\n                <div className=\"quantity-controls\">\n                  <button \n                    onClick={() => setQuantity(Math.max(1, quantity - 1))}\n                    disabled={quantity <= 1}\n                  >\n                    <Minus size={20} />\n                  </button>\n                  <span className=\"quantity-value\">{quantity}</span>\n                  <button \n                    onClick={() => setQuantity(quantity + 1)}\n                    disabled={selectedVariation?.stock_status === 'outofstock'}\n                  >\n                    <Plus size={20} />\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"price-info\">\n                <h4>Total</h4>\n                <p className=\"total-price\">{formatPrice(totalPrice)}</p>\n              </div>\n            </div>\n\n            {/* Botón agregar al carrito */}\n            <button \n              className={`add-to-cart-button ${addingToCart ? 'loading' : ''}`}\n              onClick={handleAddToCart}\n              disabled={addingToCart || (selectedVariation?.stock_status === 'outofstock')}\n            >\n              {addingToCart ? (\n                <>\n                  <Loader className=\"button-spinner\" size={20} />\n                  Agregando...\n                </>\n              ) : (\n                <>\n                  <ShoppingCart size={20} />\n                  Agregar al Carrito\n                </>\n              )}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomizationModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}