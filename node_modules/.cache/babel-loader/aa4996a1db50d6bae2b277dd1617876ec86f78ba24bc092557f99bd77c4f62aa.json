{"ast":null,"code":"// src/services/woocommerceApi.js\nimport { getApiUrl, getAuthHeaders } from '../config/woocommerce';\nclass WooCommerceAPI {\n  constructor() {\n    // Cache para configuraciones\n    this.cache = {\n      shippingZones: null,\n      paymentGateways: null,\n      storeSettings: null,\n      shippingMethods: null\n    };\n  }\n\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = getApiUrl(endpoint);\n      const options = {\n        method,\n        headers: getAuthHeaders()\n      };\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n      console.log('Request URL:', url);\n      console.log('Request options:', options);\n      const response = await fetch(url, options);\n\n      // Intentar obtener el cuerpo de la respuesta\n      const responseText = await response.text();\n      let responseData;\n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = responseText;\n      }\n      if (!response.ok) {\n        console.error('Error response:', responseData);\n        throw new Error(`Error ${response.status}: ${responseData.message || responseData.code || response.statusText}`);\n      }\n      return responseData;\n    } catch (error) {\n      console.error('Error en la petición a WooCommerce:', error);\n      throw error;\n    }\n  }\n\n  // === PRODUCTOS ===\n\n  // Obtener todos los productos\n  async getProducts(params = {}) {\n    const queryParams = new URLSearchParams({\n      per_page: 100,\n      ...params\n    }).toString();\n    const products = await this.request(`products?${queryParams}`);\n\n    // Para productos variables, cargar las variaciones y calcular el rango de precios\n    const productsWithPriceRange = await Promise.all(products.map(async product => {\n      if (product.type === 'variable' && product.variations && product.variations.length > 0) {\n        try {\n          // Obtener las variaciones del producto\n          const variations = await this.getProductVariations(product.id);\n          if (variations && variations.length > 0) {\n            // Calcular precio mínimo y máximo\n            const prices = variations.map(v => parseFloat(v.price)).filter(p => !isNaN(p));\n            if (prices.length > 0) {\n              product.price_range = {\n                min_price: Math.min(...prices),\n                max_price: Math.max(...prices)\n              };\n\n              // También actualizar el precio base al máximo para mostrar el precio familiar\n              product.display_price = Math.max(...prices);\n            }\n          }\n        } catch (error) {\n          console.error(`Error obteniendo variaciones para producto ${product.id}:`, error);\n        }\n      }\n      return product;\n    }));\n    return productsWithPriceRange;\n  }\n\n  // Obtener un producto por ID\n  async getProduct(id) {\n    return this.request(`products/${id}`);\n  }\n\n  // Obtener variaciones de un producto\n  async getProductVariations(productId) {\n    return this.request(`products/${productId}/variations?per_page=100`);\n  }\n\n  // Obtener atributos de productos\n  async getProductAttributes() {\n    return this.request('products/attributes');\n  }\n\n  // Obtener términos de un atributo\n  async getAttributeTerms(attributeId) {\n    return this.request(`products/attributes/${attributeId}/terms`);\n  }\n\n  // Obtener categorías de productos\n  async getCategories() {\n    return this.request('products/categories?per_page=100');\n  }\n\n  // === CONFIGURACIONES DE LA TIENDA ===\n\n  // Obtener información de la tienda\n  async getStoreInfo() {\n    if (this.cache.storeSettings) {\n      return this.cache.storeSettings;\n    }\n    try {\n      var _settings$find, _settings$find2, _settings$find3, _settings$find4, _settings$find5, _settings$find6, _settings$find7, _settings$find8;\n      // Intentar obtener configuraciones generales\n      const settings = await this.request('settings/general');\n      const storeInfo = {\n        name: ((_settings$find = settings.find(s => s.id === 'blogname')) === null || _settings$find === void 0 ? void 0 : _settings$find.value) || 'Escandalosos Pizza',\n        description: ((_settings$find2 = settings.find(s => s.id === 'blogdescription')) === null || _settings$find2 === void 0 ? void 0 : _settings$find2.value) || 'Dark kitchen Isla de Maipo',\n        address: ((_settings$find3 = settings.find(s => s.id === 'woocommerce_store_address')) === null || _settings$find3 === void 0 ? void 0 : _settings$find3.value) || 'Camino las parcelas 12',\n        address2: ((_settings$find4 = settings.find(s => s.id === 'woocommerce_store_address_2')) === null || _settings$find4 === void 0 ? void 0 : _settings$find4.value) || '',\n        city: ((_settings$find5 = settings.find(s => s.id === 'woocommerce_store_city')) === null || _settings$find5 === void 0 ? void 0 : _settings$find5.value) || 'Isla de Maipo',\n        postcode: ((_settings$find6 = settings.find(s => s.id === 'woocommerce_store_postcode')) === null || _settings$find6 === void 0 ? void 0 : _settings$find6.value) || '',\n        country: ((_settings$find7 = settings.find(s => s.id === 'woocommerce_default_country')) === null || _settings$find7 === void 0 ? void 0 : _settings$find7.value) || 'CL',\n        phone: '+56 942740261',\n        email: 'hola@escandalosospizza.cl',\n        currency: ((_settings$find8 = settings.find(s => s.id === 'woocommerce_currency')) === null || _settings$find8 === void 0 ? void 0 : _settings$find8.value) || 'CLP',\n        // Horarios\n        schedule: {\n          monday_thursday: {\n            open: '18:00',\n            close: '22:00',\n            label: 'Lunes a jueves'\n          },\n          friday: {\n            open: '18:00',\n            close: '23:00',\n            label: 'Viernes'\n          },\n          saturday: {\n            open: '13:00',\n            close: '23:00',\n            label: 'Sábado'\n          },\n          sunday: {\n            open: '13:00',\n            close: '22:00',\n            label: 'Domingo'\n          }\n        },\n        // Tiempos de entrega\n        deliveryTime: '30-45 minutos',\n        pickupTime: '20-30 minutos'\n      };\n      this.cache.storeSettings = storeInfo;\n      return storeInfo;\n    } catch (error) {\n      console.error('Error obteniendo información de la tienda:', error);\n      // Devolver valores por defecto\n      return this.getDefaultStoreInfo();\n    }\n  }\n\n  // === ENVÍO ===\n\n  // Obtener zonas y métodos de envío\n  async getShippingMethods() {\n    if (this.cache.shippingMethods) {\n      return this.cache.shippingMethods;\n    }\n    try {\n      const zones = await this.request('shipping/zones');\n\n      // Para cada zona, obtener sus métodos\n      const shippingData = await Promise.all(zones.map(async zone => {\n        try {\n          const methods = await this.request(`shipping/zones/${zone.id}/methods`);\n\n          // Filtrar y mapear métodos habilitados\n          const enabledMethods = methods.filter(m => m.enabled).map(method => {\n            var _method$settings, _method$settings$cost, _method$settings2, _method$settings2$min;\n            return {\n              id: method.id,\n              instanceId: method.instance_id,\n              title: method.title,\n              methodId: method.method_id,\n              methodTitle: method.method_title,\n              cost: ((_method$settings = method.settings) === null || _method$settings === void 0 ? void 0 : (_method$settings$cost = _method$settings.cost) === null || _method$settings$cost === void 0 ? void 0 : _method$settings$cost.value) || '0',\n              minAmount: ((_method$settings2 = method.settings) === null || _method$settings2 === void 0 ? void 0 : (_method$settings2$min = _method$settings2.min_amount) === null || _method$settings2$min === void 0 ? void 0 : _method$settings2$min.value) || '0',\n              enabled: method.enabled,\n              requiresAddress: method.method_id !== 'local_pickup'\n            };\n          });\n          return {\n            id: zone.id,\n            name: zone.name,\n            methods: enabledMethods\n          };\n        } catch (error) {\n          console.error(`Error obteniendo métodos para zona ${zone.id}:`, error);\n          return {\n            ...zone,\n            methods: []\n          };\n        }\n      }));\n\n      // Filtrar las zonas que no tienen métodos de envío habilitados\n      const zonesWithMethods = shippingData.filter(zone => zone.methods && zone.methods.length > 0);\n      this.cache.shippingMethods = zonesWithMethods;\n      return zonesWithMethods;\n    } catch (error) {\n      console.error('Error obteniendo métodos de envío:', error);\n      return this.getDefaultShippingMethods();\n    }\n  }\n\n  // Calcular costo de envío\n  calculateShippingCost(zones, subtotal, zoneId = null) {\n    // Si no hay zonas, devolver 0\n    if (!zones || zones.length === 0) return 0;\n\n    // Buscar la zona apropiada (por defecto la primera)\n    const zone = zoneId ? zones.find(z => z.id === zoneId) : zones[0];\n    if (!zone || !zone.methods || zone.methods.length === 0) return 0;\n\n    // Buscar método de envío (flat_rate o local_delivery)\n    const shippingMethod = zone.methods.find(m => m.methodId === 'flat_rate' || m.methodId === 'local_delivery');\n    if (!shippingMethod) return 0;\n    const cost = parseFloat(shippingMethod.cost) || 0;\n    const minAmount = parseFloat(shippingMethod.minAmount) || 0;\n\n    // Si hay monto mínimo para envío gratis y se cumple\n    if (minAmount > 0 && subtotal >= minAmount) {\n      return 0;\n    }\n    return cost;\n  }\n\n  // === MÉTODOS DE PAGO ===\n\n  // Obtener métodos de pago disponibles\n  async getPaymentGateways() {\n    if (this.cache.paymentGateways) {\n      return this.cache.paymentGateways;\n    }\n    try {\n      const gateways = await this.request('payment_gateways');\n\n      // Mapear métodos de pago habilitados\n      const paymentMethods = gateways.filter(gateway => gateway.enabled === true).map(gateway => ({\n        id: gateway.id,\n        title: gateway.title,\n        description: gateway.description,\n        icon: this.getPaymentIcon(gateway.id),\n        order: gateway.order || 0,\n        settings: gateway.settings\n      })).sort((a, b) => a.order - b.order);\n      this.cache.paymentGateways = paymentMethods;\n      return paymentMethods;\n    } catch (error) {\n      console.error('Error obteniendo métodos de pago:', error);\n      return this.getDefaultPaymentMethods();\n    }\n  }\n\n  // Obtener icono para método de pago\n  getPaymentIcon(methodId) {\n    const icons = {\n      'cod': 'DollarSign',\n      // Contra entrega\n      'bacs': 'Building',\n      // Transferencia bancaria\n      'cheque': 'FileText',\n      // Cheque\n      'paypal': 'CreditCard',\n      // PayPal\n      'stripe': 'CreditCard',\n      // Stripe\n      'mercadopago': 'CreditCard',\n      // MercadoPago\n      'webpay': 'CreditCard',\n      // Webpay\n      'transbank': 'CreditCard',\n      // Transbank\n      'flow': 'CreditCard' // Flow\n    };\n    return icons[methodId] || 'CreditCard';\n  }\n\n  // === PEDIDOS ===\n\n  // Crear un nuevo pedido\n  async createOrder(orderData) {\n    const order = {\n      payment_method: orderData.paymentMethod || 'cod',\n      payment_method_title: orderData.paymentMethodTitle || 'Pago contra entrega',\n      set_paid: false,\n      status: 'pending',\n      customer_note: orderData.notes || '',\n      billing: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        address_2: orderData.reference || '',\n        city: orderData.neighborhood || orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL',\n        email: orderData.email || '',\n        phone: orderData.phone || ''\n      },\n      shipping: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        address_2: orderData.reference || '',\n        city: orderData.neighborhood || orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL'\n      },\n      line_items: orderData.items.map(item => {\n        const lineItem = {\n          product_id: parseInt(item.productId),\n          quantity: parseInt(item.quantity)\n        };\n\n        // Si tiene variación, agregar variation_id\n        if (item.variationId) {\n          lineItem.variation_id = parseInt(item.variationId);\n        }\n\n        // IMPORTANTE: Si el item tiene un precio personalizado (con addons), usar ese precio\n        if (item.price) {\n          // Opción 1: Enviar precio total (producto + addons)\n          lineItem.total = (parseFloat(item.price) * parseInt(item.quantity)).toString();\n          lineItem.subtotal = lineItem.total;\n\n          // Opción 2 (comentada): Si quieres desglosar, envía solo el precio base\n          // y deja que Advanced Product Fields maneje los addons\n          /*\n          // Calcular precio base sin addons\n          const basePrice = parseFloat(item.price) - (item.customizations?.addonsPrice || 0);\n          lineItem.total = (basePrice * parseInt(item.quantity)).toString();\n          lineItem.subtotal = lineItem.total;\n          */\n        }\n\n        // Si tiene meta data (personalizaciones)\n        if (item.customizations) {\n          var _item$customizations$;\n          lineItem.meta_data = [];\n\n          // Instrucciones especiales\n          if (item.customizations.specialInstructions) {\n            lineItem.meta_data.push({\n              key: 'instrucciones_especiales',\n              value: item.customizations.specialInstructions\n            });\n          }\n\n          // Campos de Advanced Product Fields\n          if (((_item$customizations$ = item.customizations.productAddons) === null || _item$customizations$ === void 0 ? void 0 : _item$customizations$.length) > 0) {\n            item.customizations.productAddons.forEach(addon => {\n              lineItem.meta_data.push({\n                key: addon.key,\n                value: addon.value,\n                display_key: addon.display || addon.key,\n                display_value: addon.value\n              });\n            });\n          }\n\n          // Si es un combo, agregar información de las selecciones\n          if (item.customizations.type === 'combo' && item.customizations.comboSelections) {\n            // Agregar cada categoría del combo como meta data\n            Object.entries(item.customizations.comboSelections).forEach(([categoryId, selections]) => {\n              var _item$customizations$2;\n              const categoryInfo = (_item$customizations$2 = item.customizations.comboConfig) === null || _item$customizations$2 === void 0 ? void 0 : _item$customizations$2[categoryId];\n              if (categoryInfo && selections.length > 0) {\n                // Crear una lista legible de los productos seleccionados\n                const selectedNames = selections.map(sel => sel.name).join(', ');\n                lineItem.meta_data.push({\n                  key: `combo_${categoryInfo.name || categoryId}`,\n                  value: selectedNames,\n                  display_key: categoryInfo.name || `Categoría ${categoryId}`,\n                  display_value: selectedNames\n                });\n              }\n            });\n\n            // Agregar un indicador de que es un combo\n            lineItem.meta_data.push({\n              key: '_is_combo',\n              value: 'true'\n            });\n          }\n        }\n        return lineItem;\n      }),\n      shipping_lines: [],\n      fee_lines: [],\n      meta_data: []\n    };\n\n    // Agregar línea de envío si es delivery\n    if (orderData.orderType === 'delivery' && orderData.shippingMethod) {\n      var _orderData$shippingMe;\n      order.shipping_lines.push({\n        method_id: orderData.shippingMethod.methodId || 'flat_rate',\n        method_title: orderData.shippingMethod.title || 'Envío a domicilio',\n        total: ((_orderData$shippingMe = orderData.shippingMethod.cost) === null || _orderData$shippingMe === void 0 ? void 0 : _orderData$shippingMe.toString()) || '0'\n      });\n    }\n\n    // Agregar meta data adicional\n    order.meta_data.push({\n      key: '_order_type',\n      value: orderData.orderType || 'delivery'\n    });\n    if (orderData.paymentMethod === 'cod' && orderData.cashAmount) {\n      order.meta_data.push({\n        key: '_cash_amount',\n        value: orderData.cashAmount\n      });\n    }\n    return this.request('orders', 'POST', order);\n  }\n\n  // Obtener un pedido\n  async getOrder(orderId) {\n    return this.request(`orders/${orderId}`);\n  }\n\n  // Actualizar estado de un pedido\n  async updateOrderStatus(orderId, status) {\n    return this.request(`orders/${orderId}`, 'PUT', {\n      status\n    });\n  }\n\n  // === CLIENTES ===\n\n  // Crear cliente\n  async createCustomer(customerData) {\n    return this.request('customers', 'POST', customerData);\n  }\n\n  // Obtener cliente\n  async getCustomer(customerId) {\n    return this.request(`customers/${customerId}`);\n  }\n\n  // === MÉTODOS DE UTILIDAD ===\n\n  // Limpiar cache\n  clearCache() {\n    this.cache = {\n      shippingZones: null,\n      paymentGateways: null,\n      storeSettings: null,\n      shippingMethods: null\n    };\n  }\n\n  // === ZONAS DE ENVÍO ===\n\n  // Obtener zonas de envío disponibles para delivery\n  async getDeliveryZones() {\n    try {\n      // Intentar obtener desde un endpoint personalizado o configuración\n      const response = await fetch('https://escandalosospizzas.cl/wp/wp-json/wp/v2/settings/delivery_zones', {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const zones = await response.json();\n        return zones;\n      }\n    } catch (error) {\n      console.error('Error obteniendo zonas de delivery:', error);\n    }\n\n    // Si no hay configuración, devolver array vacío\n    // Las zonas deberían configurarse en WooCommerce\n    return [];\n  }\n\n  // === VALORES POR DEFECTO ===\n  // Estos valores solo se usan si la API falla completamente\n\n  getDefaultStoreInfo() {\n    console.warn('Usando información de tienda por defecto. Configure en WooCommerce.');\n    return {\n      name: 'Escandalosos Pizza',\n      description: 'Dark kitchen Isla de Maipo',\n      address: 'Camino las parcelas 12',\n      address2: '',\n      city: 'Isla de Maipo',\n      postcode: '',\n      country: 'CL',\n      phone: '+56 942740261',\n      email: 'hola@escandalosospizza.cl',\n      currency: 'CLP',\n      schedule: {\n        monday_thursday: {\n          open: '18:00',\n          close: '22:00',\n          label: 'Lunes a jueves'\n        },\n        friday: {\n          open: '18:00',\n          close: '23:00',\n          label: 'Viernes'\n        },\n        saturday: {\n          open: '13:00',\n          close: '23:00',\n          label: 'Sábado'\n        },\n        sunday: {\n          open: '13:00',\n          close: '22:00',\n          label: 'Domingo'\n        }\n      },\n      deliveryTime: '30-45 minutos',\n      pickupTime: '20-30 minutos'\n    };\n  }\n  getDefaultShippingMethods() {\n    console.warn('No se encontraron métodos de envío configurados en WooCommerce.');\n    // Devolver array vacío - los métodos deben configurarse en WooCommerce\n    return [];\n  }\n  getDefaultPaymentMethods() {\n    console.warn('No se encontraron métodos de pago configurados en WooCommerce.');\n    // Devolver array vacío - los métodos deben configurarse en WooCommerce\n    return [];\n  }\n}\nexport default new WooCommerceAPI();","map":{"version":3,"names":["getApiUrl","getAuthHeaders","WooCommerceAPI","constructor","cache","shippingZones","paymentGateways","storeSettings","shippingMethods","request","endpoint","method","data","url","options","headers","body","JSON","stringify","console","log","response","fetch","responseText","text","responseData","parse","e","ok","error","Error","status","message","code","statusText","getProducts","params","queryParams","URLSearchParams","per_page","toString","products","productsWithPriceRange","Promise","all","map","product","type","variations","length","getProductVariations","id","prices","v","parseFloat","price","filter","p","isNaN","price_range","min_price","Math","min","max_price","max","display_price","getProduct","productId","getProductAttributes","getAttributeTerms","attributeId","getCategories","getStoreInfo","_settings$find","_settings$find2","_settings$find3","_settings$find4","_settings$find5","_settings$find6","_settings$find7","_settings$find8","settings","storeInfo","name","find","s","value","description","address","address2","city","postcode","country","phone","email","currency","schedule","monday_thursday","open","close","label","friday","saturday","sunday","deliveryTime","pickupTime","getDefaultStoreInfo","getShippingMethods","zones","shippingData","zone","methods","enabledMethods","m","enabled","_method$settings","_method$settings$cost","_method$settings2","_method$settings2$min","instanceId","instance_id","title","methodId","method_id","methodTitle","method_title","cost","minAmount","min_amount","requiresAddress","zonesWithMethods","getDefaultShippingMethods","calculateShippingCost","subtotal","zoneId","z","shippingMethod","getPaymentGateways","gateways","paymentMethods","gateway","icon","getPaymentIcon","order","sort","a","b","getDefaultPaymentMethods","icons","createOrder","orderData","payment_method","paymentMethod","payment_method_title","paymentMethodTitle","set_paid","customer_note","notes","billing","first_name","customerName","last_name","address_1","address_2","reference","neighborhood","state","shipping","line_items","items","item","lineItem","product_id","parseInt","quantity","variationId","variation_id","total","customizations","_item$customizations$","meta_data","specialInstructions","push","key","productAddons","forEach","addon","display_key","display","display_value","comboSelections","Object","entries","categoryId","selections","_item$customizations$2","categoryInfo","comboConfig","selectedNames","sel","join","shipping_lines","fee_lines","orderType","_orderData$shippingMe","cashAmount","getOrder","orderId","updateOrderStatus","createCustomer","customerData","getCustomer","customerId","clearCache","getDeliveryZones","json","warn"],"sources":["/Users/franciscalabra/Desktop/escandalosos/src/services/woocommerceApi.js"],"sourcesContent":["// src/services/woocommerceApi.js\nimport { getApiUrl, getAuthHeaders } from '../config/woocommerce';\n\nclass WooCommerceAPI {\n  constructor() {\n    // Cache para configuraciones\n    this.cache = {\n      shippingZones: null,\n      paymentGateways: null,\n      storeSettings: null,\n      shippingMethods: null\n    };\n  }\n\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = getApiUrl(endpoint);\n      const options = {\n        method,\n        headers: getAuthHeaders(),\n      };\n\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n\n      console.log('Request URL:', url);\n      console.log('Request options:', options);\n\n      const response = await fetch(url, options);\n      \n      // Intentar obtener el cuerpo de la respuesta\n      const responseText = await response.text();\n      let responseData;\n      \n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = responseText;\n      }\n\n      if (!response.ok) {\n        console.error('Error response:', responseData);\n        throw new Error(`Error ${response.status}: ${responseData.message || responseData.code || response.statusText}`);\n      }\n\n      return responseData;\n    } catch (error) {\n      console.error('Error en la petición a WooCommerce:', error);\n      throw error;\n    }\n  }\n\n  // === PRODUCTOS ===\n  \n  // Obtener todos los productos\n  async getProducts(params = {}) {\n    const queryParams = new URLSearchParams({\n      per_page: 100,\n      ...params\n    }).toString();\n    \n    const products = await this.request(`products?${queryParams}`);\n    \n    // Para productos variables, cargar las variaciones y calcular el rango de precios\n    const productsWithPriceRange = await Promise.all(\n      products.map(async (product) => {\n        if (product.type === 'variable' && product.variations && product.variations.length > 0) {\n          try {\n            // Obtener las variaciones del producto\n            const variations = await this.getProductVariations(product.id);\n            \n            if (variations && variations.length > 0) {\n              // Calcular precio mínimo y máximo\n              const prices = variations.map(v => parseFloat(v.price)).filter(p => !isNaN(p));\n              \n              if (prices.length > 0) {\n                product.price_range = {\n                  min_price: Math.min(...prices),\n                  max_price: Math.max(...prices)\n                };\n                \n                // También actualizar el precio base al máximo para mostrar el precio familiar\n                product.display_price = Math.max(...prices);\n              }\n            }\n          } catch (error) {\n            console.error(`Error obteniendo variaciones para producto ${product.id}:`, error);\n          }\n        }\n        \n        return product;\n      })\n    );\n    \n    return productsWithPriceRange;\n  }\n\n  // Obtener un producto por ID\n  async getProduct(id) {\n    return this.request(`products/${id}`);\n  }\n\n  // Obtener variaciones de un producto\n  async getProductVariations(productId) {\n    return this.request(`products/${productId}/variations?per_page=100`);\n  }\n\n  // Obtener atributos de productos\n  async getProductAttributes() {\n    return this.request('products/attributes');\n  }\n\n  // Obtener términos de un atributo\n  async getAttributeTerms(attributeId) {\n    return this.request(`products/attributes/${attributeId}/terms`);\n  }\n\n  // Obtener categorías de productos\n  async getCategories() {\n    return this.request('products/categories?per_page=100');\n  }\n\n  // === CONFIGURACIONES DE LA TIENDA ===\n\n  // Obtener información de la tienda\n  async getStoreInfo() {\n    if (this.cache.storeSettings) {\n      return this.cache.storeSettings;\n    }\n\n    try {\n      // Intentar obtener configuraciones generales\n      const settings = await this.request('settings/general');\n      \n      const storeInfo = {\n        name: settings.find(s => s.id === 'blogname')?.value || 'Escandalosos Pizza',\n        description: settings.find(s => s.id === 'blogdescription')?.value || 'Dark kitchen Isla de Maipo',\n        address: settings.find(s => s.id === 'woocommerce_store_address')?.value || 'Camino las parcelas 12',\n        address2: settings.find(s => s.id === 'woocommerce_store_address_2')?.value || '',\n        city: settings.find(s => s.id === 'woocommerce_store_city')?.value || 'Isla de Maipo',\n        postcode: settings.find(s => s.id === 'woocommerce_store_postcode')?.value || '',\n        country: settings.find(s => s.id === 'woocommerce_default_country')?.value || 'CL',\n        phone: '+56 942740261',\n        email: 'hola@escandalosospizza.cl',\n        currency: settings.find(s => s.id === 'woocommerce_currency')?.value || 'CLP',\n        // Horarios\n        schedule: {\n          monday_thursday: { open: '18:00', close: '22:00', label: 'Lunes a jueves' },\n          friday: { open: '18:00', close: '23:00', label: 'Viernes' },\n          saturday: { open: '13:00', close: '23:00', label: 'Sábado' },\n          sunday: { open: '13:00', close: '22:00', label: 'Domingo' }\n        },\n        // Tiempos de entrega\n        deliveryTime: '30-45 minutos',\n        pickupTime: '20-30 minutos'\n      };\n      \n      this.cache.storeSettings = storeInfo;\n      return storeInfo;\n    } catch (error) {\n      console.error('Error obteniendo información de la tienda:', error);\n      // Devolver valores por defecto\n      return this.getDefaultStoreInfo();\n    }\n  }\n\n  // === ENVÍO ===\n\n  // Obtener zonas y métodos de envío\n  async getShippingMethods() {\n    if (this.cache.shippingMethods) {\n      return this.cache.shippingMethods;\n    }\n\n    try {\n      const zones = await this.request('shipping/zones');\n      \n      // Para cada zona, obtener sus métodos\n      const shippingData = await Promise.all(\n        zones.map(async (zone) => {\n          try {\n            const methods = await this.request(`shipping/zones/${zone.id}/methods`);\n            \n            // Filtrar y mapear métodos habilitados\n            const enabledMethods = methods\n              .filter(m => m.enabled)\n              .map(method => ({\n                id: method.id,\n                instanceId: method.instance_id,\n                title: method.title,\n                methodId: method.method_id,\n                methodTitle: method.method_title,\n                cost: method.settings?.cost?.value || '0',\n                minAmount: method.settings?.min_amount?.value || '0',\n                enabled: method.enabled,\n                requiresAddress: method.method_id !== 'local_pickup'\n              }));\n            \n            return {\n              id: zone.id,\n              name: zone.name,\n              methods: enabledMethods\n            };\n          } catch (error) {\n            console.error(`Error obteniendo métodos para zona ${zone.id}:`, error);\n            return { ...zone, methods: [] };\n          }\n        })\n      );\n      \n      // Filtrar las zonas que no tienen métodos de envío habilitados\n      const zonesWithMethods = shippingData.filter(zone => zone.methods && zone.methods.length > 0);\n      \n      this.cache.shippingMethods = zonesWithMethods;\n      return zonesWithMethods;\n    } catch (error) {\n      console.error('Error obteniendo métodos de envío:', error);\n      return this.getDefaultShippingMethods();\n    }\n  }\n\n  // Calcular costo de envío\n  calculateShippingCost(zones, subtotal, zoneId = null) {\n    // Si no hay zonas, devolver 0\n    if (!zones || zones.length === 0) return 0;\n    \n    // Buscar la zona apropiada (por defecto la primera)\n    const zone = zoneId ? zones.find(z => z.id === zoneId) : zones[0];\n    \n    if (!zone || !zone.methods || zone.methods.length === 0) return 0;\n    \n    // Buscar método de envío (flat_rate o local_delivery)\n    const shippingMethod = zone.methods.find(m => \n      m.methodId === 'flat_rate' || \n      m.methodId === 'local_delivery'\n    );\n    \n    if (!shippingMethod) return 0;\n    \n    const cost = parseFloat(shippingMethod.cost) || 0;\n    const minAmount = parseFloat(shippingMethod.minAmount) || 0;\n    \n    // Si hay monto mínimo para envío gratis y se cumple\n    if (minAmount > 0 && subtotal >= minAmount) {\n      return 0;\n    }\n    \n    return cost;\n  }\n\n  // === MÉTODOS DE PAGO ===\n\n  // Obtener métodos de pago disponibles\n  async getPaymentGateways() {\n    if (this.cache.paymentGateways) {\n      return this.cache.paymentGateways;\n    }\n\n    try {\n      const gateways = await this.request('payment_gateways');\n      \n      // Mapear métodos de pago habilitados\n      const paymentMethods = gateways\n        .filter(gateway => gateway.enabled === true)\n        .map(gateway => ({\n          id: gateway.id,\n          title: gateway.title,\n          description: gateway.description,\n          icon: this.getPaymentIcon(gateway.id),\n          order: gateway.order || 0,\n          settings: gateway.settings\n        }))\n        .sort((a, b) => a.order - b.order);\n      \n      this.cache.paymentGateways = paymentMethods;\n      return paymentMethods;\n    } catch (error) {\n      console.error('Error obteniendo métodos de pago:', error);\n      return this.getDefaultPaymentMethods();\n    }\n  }\n\n  // Obtener icono para método de pago\n  getPaymentIcon(methodId) {\n    const icons = {\n      'cod': 'DollarSign',           // Contra entrega\n      'bacs': 'Building',            // Transferencia bancaria\n      'cheque': 'FileText',          // Cheque\n      'paypal': 'CreditCard',        // PayPal\n      'stripe': 'CreditCard',        // Stripe\n      'mercadopago': 'CreditCard',   // MercadoPago\n      'webpay': 'CreditCard',        // Webpay\n      'transbank': 'CreditCard',     // Transbank\n      'flow': 'CreditCard'           // Flow\n    };\n    \n    return icons[methodId] || 'CreditCard';\n  }\n\n  // === PEDIDOS ===\n  \n  // Crear un nuevo pedido\n  async createOrder(orderData) {\n    const order = {\n      payment_method: orderData.paymentMethod || 'cod',\n      payment_method_title: orderData.paymentMethodTitle || 'Pago contra entrega',\n      set_paid: false,\n      status: 'pending',\n      customer_note: orderData.notes || '',\n      billing: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        address_2: orderData.reference || '',\n        city: orderData.neighborhood || orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL',\n        email: orderData.email || '',\n        phone: orderData.phone || ''\n      },\n      shipping: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        address_2: orderData.reference || '',\n        city: orderData.neighborhood || orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL'\n      },\n      line_items: orderData.items.map(item => {\n        const lineItem = {\n          product_id: parseInt(item.productId),\n          quantity: parseInt(item.quantity)\n        };\n\n        // Si tiene variación, agregar variation_id\n        if (item.variationId) {\n          lineItem.variation_id = parseInt(item.variationId);\n        }\n\n        // IMPORTANTE: Si el item tiene un precio personalizado (con addons), usar ese precio\n        if (item.price) {\n          // Opción 1: Enviar precio total (producto + addons)\n          lineItem.total = (parseFloat(item.price) * parseInt(item.quantity)).toString();\n          lineItem.subtotal = lineItem.total;\n          \n          // Opción 2 (comentada): Si quieres desglosar, envía solo el precio base\n          // y deja que Advanced Product Fields maneje los addons\n          /*\n          // Calcular precio base sin addons\n          const basePrice = parseFloat(item.price) - (item.customizations?.addonsPrice || 0);\n          lineItem.total = (basePrice * parseInt(item.quantity)).toString();\n          lineItem.subtotal = lineItem.total;\n          */\n        }\n\n        // Si tiene meta data (personalizaciones)\n        if (item.customizations) {\n          lineItem.meta_data = [];\n          \n          // Instrucciones especiales\n          if (item.customizations.specialInstructions) {\n            lineItem.meta_data.push({\n              key: 'instrucciones_especiales',\n              value: item.customizations.specialInstructions\n            });\n          }\n\n          // Campos de Advanced Product Fields\n          if (item.customizations.productAddons?.length > 0) {\n            item.customizations.productAddons.forEach(addon => {\n              lineItem.meta_data.push({\n                key: addon.key,\n                value: addon.value,\n                display_key: addon.display || addon.key,\n                display_value: addon.value\n              });\n            });\n          }\n\n          // Si es un combo, agregar información de las selecciones\n          if (item.customizations.type === 'combo' && item.customizations.comboSelections) {\n            // Agregar cada categoría del combo como meta data\n            Object.entries(item.customizations.comboSelections).forEach(([categoryId, selections]) => {\n              const categoryInfo = item.customizations.comboConfig?.[categoryId];\n              if (categoryInfo && selections.length > 0) {\n                // Crear una lista legible de los productos seleccionados\n                const selectedNames = selections.map(sel => sel.name).join(', ');\n                lineItem.meta_data.push({\n                  key: `combo_${categoryInfo.name || categoryId}`,\n                  value: selectedNames,\n                  display_key: categoryInfo.name || `Categoría ${categoryId}`,\n                  display_value: selectedNames\n                });\n              }\n            });\n            \n            // Agregar un indicador de que es un combo\n            lineItem.meta_data.push({\n              key: '_is_combo',\n              value: 'true'\n            });\n          }\n        }\n\n        return lineItem;\n      }),\n      shipping_lines: [],\n      fee_lines: [],\n      meta_data: []\n    };\n\n    // Agregar línea de envío si es delivery\n    if (orderData.orderType === 'delivery' && orderData.shippingMethod) {\n      order.shipping_lines.push({\n        method_id: orderData.shippingMethod.methodId || 'flat_rate',\n        method_title: orderData.shippingMethod.title || 'Envío a domicilio',\n        total: orderData.shippingMethod.cost?.toString() || '0'\n      });\n    }\n\n    // Agregar meta data adicional\n    order.meta_data.push({\n      key: '_order_type',\n      value: orderData.orderType || 'delivery'\n    });\n\n    if (orderData.paymentMethod === 'cod' && orderData.cashAmount) {\n      order.meta_data.push({\n        key: '_cash_amount',\n        value: orderData.cashAmount\n      });\n    }\n\n    return this.request('orders', 'POST', order);\n  }\n\n  // Obtener un pedido\n  async getOrder(orderId) {\n    return this.request(`orders/${orderId}`);\n  }\n\n  // Actualizar estado de un pedido\n  async updateOrderStatus(orderId, status) {\n    return this.request(`orders/${orderId}`, 'PUT', { status });\n  }\n\n  // === CLIENTES ===\n  \n  // Crear cliente\n  async createCustomer(customerData) {\n    return this.request('customers', 'POST', customerData);\n  }\n\n  // Obtener cliente\n  async getCustomer(customerId) {\n    return this.request(`customers/${customerId}`);\n  }\n\n  // === MÉTODOS DE UTILIDAD ===\n\n  // Limpiar cache\n  clearCache() {\n    this.cache = {\n      shippingZones: null,\n      paymentGateways: null,\n      storeSettings: null,\n      shippingMethods: null\n    };\n  }\n\n  // === ZONAS DE ENVÍO ===\n  \n  // Obtener zonas de envío disponibles para delivery\n  async getDeliveryZones() {\n    try {\n      // Intentar obtener desde un endpoint personalizado o configuración\n      const response = await fetch(\n        'https://escandalosospizzas.cl/wp/wp-json/wp/v2/settings/delivery_zones',\n        { headers: getAuthHeaders() }\n      );\n      \n      if (response.ok) {\n        const zones = await response.json();\n        return zones;\n      }\n    } catch (error) {\n      console.error('Error obteniendo zonas de delivery:', error);\n    }\n    \n    // Si no hay configuración, devolver array vacío\n    // Las zonas deberían configurarse en WooCommerce\n    return [];\n  }\n\n  // === VALORES POR DEFECTO ===\n  // Estos valores solo se usan si la API falla completamente\n\n  getDefaultStoreInfo() {\n    console.warn('Usando información de tienda por defecto. Configure en WooCommerce.');\n    return {\n      name: 'Escandalosos Pizza',\n      description: 'Dark kitchen Isla de Maipo',\n      address: 'Camino las parcelas 12',\n      address2: '',\n      city: 'Isla de Maipo',\n      postcode: '',\n      country: 'CL',\n      phone: '+56 942740261',\n      email: 'hola@escandalosospizza.cl',\n      currency: 'CLP',\n      schedule: {\n        monday_thursday: { open: '18:00', close: '22:00', label: 'Lunes a jueves' },\n        friday: { open: '18:00', close: '23:00', label: 'Viernes' },\n        saturday: { open: '13:00', close: '23:00', label: 'Sábado' },\n        sunday: { open: '13:00', close: '22:00', label: 'Domingo' }\n      },\n      deliveryTime: '30-45 minutos',\n      pickupTime: '20-30 minutos'\n    };\n  }\n\n  getDefaultShippingMethods() {\n    console.warn('No se encontraron métodos de envío configurados en WooCommerce.');\n    // Devolver array vacío - los métodos deben configurarse en WooCommerce\n    return [];\n  }\n\n  getDefaultPaymentMethods() {\n    console.warn('No se encontraron métodos de pago configurados en WooCommerce.');\n    // Devolver array vacío - los métodos deben configurarse en WooCommerce\n    return [];\n  }\n}\n\nexport default new WooCommerceAPI();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}