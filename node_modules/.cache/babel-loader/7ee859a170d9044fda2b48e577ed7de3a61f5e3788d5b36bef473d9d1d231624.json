{"ast":null,"code":"// src/services/escandalososApi.js\nclass EscandalososAPI{constructor(){// URL base de la API del plugin Escandalosos\nthis.baseUrl='https://escandalosospizzas.cl/wp/wp-json/escandalosos/v1';// Cache para evitar llamadas repetidas\nthis.cache={config:null,lastFetch:null,cacheTime:5*60*1000// 5 minutos de cache\n};}// Método genérico para hacer peticiones\nasync request(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const url=`${this.baseUrl}${endpoint}`;const options={method,headers:{'Content-Type':'application/json'}};if(data&&method!=='GET'){options.body=JSON.stringify(data);}console.log('Escandalosos API Request:',url);const response=await fetch(url,options);if(!response.ok){throw new Error(`Error ${response.status}: ${response.statusText}`);}const responseData=await response.json();return responseData;}catch(error){console.error('Error en la petición a Escandalosos API:',error);throw error;}}// Obtener toda la configuración del plugin\nasync getConfig(){let forceRefresh=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;// Verificar cache\nif(!forceRefresh&&this.cache.config&&this.cache.lastFetch){const now=new Date().getTime();if(now-this.cache.lastFetch<this.cache.cacheTime){console.log('Devolviendo configuración desde cache');return this.cache.config;}}try{const config=await this.request('/config');// Guardar en cache\nthis.cache.config=config;this.cache.lastFetch=new Date().getTime();console.log('Configuración Escandalosos obtenida:',config);return config;}catch(error){console.error('Error obteniendo configuración:',error);// Si hay configuración en cache, devolverla aunque esté expirada\nif(this.cache.config){console.warn('Devolviendo configuración desde cache expirado');return this.cache.config;}// Devolver configuración vacía si no hay nada\nreturn{products:{},labels:[]};}}// Obtener configuración de un producto específico\nasync getProductConfig(productId){const config=await this.getConfig();return config.products[productId]||null;}// Verificar si un producto es combo\nasync isCombo(productId){const productConfig=await this.getProductConfig(productId);return(productConfig===null||productConfig===void 0?void 0:productConfig.is_combo)||false;}// Obtener configuración de combo de un producto\nasync getComboConfig(productId){const productConfig=await this.getProductConfig(productId);if(!productConfig||!productConfig.is_combo){return null;}return productConfig.combo_config||null;}// Obtener etiquetas de un producto\nasync getProductLabels(productId){const productConfig=await this.getProductConfig(productId);return(productConfig===null||productConfig===void 0?void 0:productConfig.labels)||[];}// Obtener todas las etiquetas disponibles\nasync getAllLabels(){const config=await this.getConfig();return config.labels||[];}// Limpiar cache\nclearCache(){this.cache={config:null,lastFetch:null,cacheTime:5*60*1000};}// Método helper para formatear la configuración de combo\nformatComboConfig(comboConfig){if(!comboConfig)return null;// Convertir el objeto a un array más fácil de manejar\nconst formattedConfig=[];for(const[categoryId,config]of Object.entries(comboConfig)){formattedConfig.push({categoryId:categoryId,name:config.name||'Categoría',minSelection:config.minSelection||1,maxSelection:config.maxSelection||1});}return formattedConfig;}// Validar selecciones de combo\nvalidateComboSelections(comboConfig,selections){const errors=[];for(const[categoryId,config]of Object.entries(comboConfig)){const categorySelections=selections[categoryId]||[];if(categorySelections.length<config.minSelection){errors.push({categoryId,message:`Debes seleccionar al menos ${config.minSelection} opción(es) en ${config.name}`});}if(categorySelections.length>config.maxSelection){errors.push({categoryId,message:`No puedes seleccionar más de ${config.maxSelection} opción(es) en ${config.name}`});}}return errors;}}// Exportar una instancia única\nexport default new EscandalososAPI();","map":{"version":3,"names":["EscandalososAPI","constructor","baseUrl","cache","config","lastFetch","cacheTime","request","endpoint","method","arguments","length","undefined","data","url","options","headers","body","JSON","stringify","console","log","response","fetch","ok","Error","status","statusText","responseData","json","error","getConfig","forceRefresh","now","Date","getTime","warn","products","labels","getProductConfig","productId","isCombo","productConfig","is_combo","getComboConfig","combo_config","getProductLabels","getAllLabels","clearCache","formatComboConfig","comboConfig","formattedConfig","categoryId","Object","entries","push","name","minSelection","maxSelection","validateComboSelections","selections","errors","categorySelections","message"],"sources":["/Users/franciscalabra/Desktop/escandalosos/src/services/escandalososApi.js"],"sourcesContent":["// src/services/escandalososApi.js\n\nclass EscandalososAPI {\n  constructor() {\n    // URL base de la API del plugin Escandalosos\n    this.baseUrl = 'https://escandalosospizzas.cl/wp/wp-json/escandalosos/v1';\n    \n    // Cache para evitar llamadas repetidas\n    this.cache = {\n      config: null,\n      lastFetch: null,\n      cacheTime: 5 * 60 * 1000 // 5 minutos de cache\n    };\n  }\n\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = `${this.baseUrl}${endpoint}`;\n      const options = {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      };\n\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n\n      console.log('Escandalosos API Request:', url);\n\n      const response = await fetch(url, options);\n      \n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      const responseData = await response.json();\n      return responseData;\n      \n    } catch (error) {\n      console.error('Error en la petición a Escandalosos API:', error);\n      throw error;\n    }\n  }\n\n  // Obtener toda la configuración del plugin\n  async getConfig(forceRefresh = false) {\n    // Verificar cache\n    if (!forceRefresh && this.cache.config && this.cache.lastFetch) {\n      const now = new Date().getTime();\n      if (now - this.cache.lastFetch < this.cache.cacheTime) {\n        console.log('Devolviendo configuración desde cache');\n        return this.cache.config;\n      }\n    }\n\n    try {\n      const config = await this.request('/config');\n      \n      // Guardar en cache\n      this.cache.config = config;\n      this.cache.lastFetch = new Date().getTime();\n      \n      console.log('Configuración Escandalosos obtenida:', config);\n      return config;\n      \n    } catch (error) {\n      console.error('Error obteniendo configuración:', error);\n      \n      // Si hay configuración en cache, devolverla aunque esté expirada\n      if (this.cache.config) {\n        console.warn('Devolviendo configuración desde cache expirado');\n        return this.cache.config;\n      }\n      \n      // Devolver configuración vacía si no hay nada\n      return {\n        products: {},\n        labels: []\n      };\n    }\n  }\n\n  // Obtener configuración de un producto específico\n  async getProductConfig(productId) {\n    const config = await this.getConfig();\n    return config.products[productId] || null;\n  }\n\n  // Verificar si un producto es combo\n  async isCombo(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    return productConfig?.is_combo || false;\n  }\n\n  // Obtener configuración de combo de un producto\n  async getComboConfig(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    \n    if (!productConfig || !productConfig.is_combo) {\n      return null;\n    }\n    \n    return productConfig.combo_config || null;\n  }\n\n  // Obtener etiquetas de un producto\n  async getProductLabels(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    return productConfig?.labels || [];\n  }\n\n  // Obtener todas las etiquetas disponibles\n  async getAllLabels() {\n    const config = await this.getConfig();\n    return config.labels || [];\n  }\n\n  // Limpiar cache\n  clearCache() {\n    this.cache = {\n      config: null,\n      lastFetch: null,\n      cacheTime: 5 * 60 * 1000\n    };\n  }\n\n  // Método helper para formatear la configuración de combo\n  formatComboConfig(comboConfig) {\n    if (!comboConfig) return null;\n    \n    // Convertir el objeto a un array más fácil de manejar\n    const formattedConfig = [];\n    \n    for (const [categoryId, config] of Object.entries(comboConfig)) {\n      formattedConfig.push({\n        categoryId: categoryId,\n        name: config.name || 'Categoría',\n        minSelection: config.minSelection || 1,\n        maxSelection: config.maxSelection || 1\n      });\n    }\n    \n    return formattedConfig;\n  }\n\n  // Validar selecciones de combo\n  validateComboSelections(comboConfig, selections) {\n    const errors = [];\n    \n    for (const [categoryId, config] of Object.entries(comboConfig)) {\n      const categorySelections = selections[categoryId] || [];\n      \n      if (categorySelections.length < config.minSelection) {\n        errors.push({\n          categoryId,\n          message: `Debes seleccionar al menos ${config.minSelection} opción(es) en ${config.name}`\n        });\n      }\n      \n      if (categorySelections.length > config.maxSelection) {\n        errors.push({\n          categoryId,\n          message: `No puedes seleccionar más de ${config.maxSelection} opción(es) en ${config.name}`\n        });\n      }\n    }\n    \n    return errors;\n  }\n}\n\n// Exportar una instancia única\nexport default new EscandalososAPI();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}