{"ast":null,"code":"// src/services/woocommerceApi.js\nimport { getApiUrl, getAuthHeaders } from '../config/woocommerce';\nclass WooCommerceAPI {\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = getApiUrl(endpoint);\n      const options = {\n        method,\n        headers: getAuthHeaders()\n      };\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n      console.log('Request URL:', url);\n      console.log('Request options:', options);\n      const response = await fetch(url, options);\n\n      // Intentar obtener el cuerpo de la respuesta\n      const responseText = await response.text();\n      let responseData;\n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = responseText;\n      }\n      if (!response.ok) {\n        console.error('Error response:', responseData);\n        throw new Error(`Error ${response.status}: ${responseData.message || responseData.code || response.statusText}`);\n      }\n      return responseData;\n    } catch (error) {\n      console.error('Error en la petición a WooCommerce:', error);\n      throw error;\n    }\n  }\n\n  // === PRODUCTOS ===\n\n  // Obtener todos los productos\n  async getProducts(params = {}) {\n    const queryParams = new URLSearchParams({\n      per_page: 100,\n      ...params\n    }).toString();\n    return this.request(`products?${queryParams}`);\n  }\n\n  // Obtener un producto por ID\n  async getProduct(id) {\n    return this.request(`products/${id}`);\n  }\n\n  // Obtener variaciones de un producto\n  async getProductVariations(productId) {\n    return this.request(`products/${productId}/variations?per_page=100`);\n  }\n\n  // Obtener atributos de productos\n  async getProductAttributes() {\n    return this.request('products/attributes');\n  }\n\n  // Obtener términos de un atributo\n  async getAttributeTerms(attributeId) {\n    return this.request(`products/attributes/${attributeId}/terms`);\n  }\n\n  // Obtener categorías de productos\n  async getCategories() {\n    return this.request('products/categories?per_page=100');\n  }\n\n  // === PEDIDOS ===\n\n  // Crear un nuevo pedido\n  async createOrder(orderData) {\n    var _orderData$shipping$c;\n    const order = {\n      payment_method: orderData.paymentMethod || 'cash',\n      payment_method_title: orderData.paymentMethodTitle || 'Pago en efectivo',\n      set_paid: false,\n      status: 'pending',\n      billing: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        city: orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL',\n        email: orderData.email || '',\n        phone: orderData.phone || ''\n      },\n      shipping: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        city: orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL'\n      },\n      line_items: orderData.items.map(item => {\n        const lineItem = {\n          product_id: parseInt(item.productId),\n          quantity: parseInt(item.quantity)\n        };\n\n        // Si tiene variación, agregar variation_id\n        if (item.variationId) {\n          lineItem.variation_id = parseInt(item.variationId);\n        }\n\n        // Si tiene meta data (personalizaciones)\n        if (item.customizations) {\n          var _item$customizations$, _item$customizations$2, _item$customizations$3;\n          lineItem.meta_data = [];\n          if (((_item$customizations$ = item.customizations.extraIngredients) === null || _item$customizations$ === void 0 ? void 0 : _item$customizations$.length) > 0) {\n            lineItem.meta_data.push({\n              key: 'ingredientes_extra',\n              value: item.customizations.extraIngredients.map(i => i.name).join(', ')\n            });\n          }\n          if (((_item$customizations$2 = item.customizations.removedIngredients) === null || _item$customizations$2 === void 0 ? void 0 : _item$customizations$2.length) > 0) {\n            lineItem.meta_data.push({\n              key: 'ingredientes_removidos',\n              value: item.customizations.removedIngredients.join(', ')\n            });\n          }\n          if (item.customizations.specialInstructions) {\n            lineItem.meta_data.push({\n              key: 'instrucciones_especiales',\n              value: item.customizations.specialInstructions\n            });\n          }\n\n          // Agregar campos de Advanced Product Fields\n          if (((_item$customizations$3 = item.customizations.productAddons) === null || _item$customizations$3 === void 0 ? void 0 : _item$customizations$3.length) > 0) {\n            item.customizations.productAddons.forEach(addon => {\n              lineItem.meta_data.push({\n                key: addon.key,\n                value: addon.value,\n                display_key: addon.display || addon.key,\n                display_value: addon.value\n              });\n            });\n          }\n        }\n        return lineItem;\n      }),\n      shipping_lines: orderData.shipping ? [{\n        method_id: orderData.shipping.method_id || 'flat_rate',\n        method_title: orderData.shipping.method_title || 'Envío a domicilio',\n        total: ((_orderData$shipping$c = orderData.shipping.cost) === null || _orderData$shipping$c === void 0 ? void 0 : _orderData$shipping$c.toString()) || '0'\n      }] : []\n    };\n    return this.request('orders', 'POST', order);\n  }\n\n  // Obtener un pedido\n  async getOrder(orderId) {\n    return this.request(`orders/${orderId}`);\n  }\n\n  // Actualizar estado de un pedido\n  async updateOrderStatus(orderId, status) {\n    return this.request(`orders/${orderId}`, 'PUT', {\n      status\n    });\n  }\n\n  // === CLIENTES ===\n\n  // Crear cliente\n  async createCustomer(customerData) {\n    return this.request('customers', 'POST', customerData);\n  }\n\n  // Obtener cliente\n  async getCustomer(customerId) {\n    return this.request(`customers/${customerId}`);\n  }\n}\nexport default new WooCommerceAPI();","map":{"version":3,"names":["getApiUrl","getAuthHeaders","WooCommerceAPI","request","endpoint","method","data","url","options","headers","body","JSON","stringify","console","log","response","fetch","responseText","text","responseData","parse","e","ok","error","Error","status","message","code","statusText","getProducts","params","queryParams","URLSearchParams","per_page","toString","getProduct","id","getProductVariations","productId","getProductAttributes","getAttributeTerms","attributeId","getCategories","createOrder","orderData","_orderData$shipping$c","order","payment_method","paymentMethod","payment_method_title","paymentMethodTitle","set_paid","billing","first_name","customerName","last_name","address_1","address","city","state","postcode","country","email","phone","shipping","line_items","items","map","item","lineItem","product_id","parseInt","quantity","variationId","variation_id","customizations","_item$customizations$","_item$customizations$2","_item$customizations$3","meta_data","extraIngredients","length","push","key","value","i","name","join","removedIngredients","specialInstructions","productAddons","forEach","addon","display_key","display","display_value","shipping_lines","method_id","method_title","total","cost","getOrder","orderId","updateOrderStatus","createCustomer","customerData","getCustomer","customerId"],"sources":["/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/services/woocommerceApi.js"],"sourcesContent":["// src/services/woocommerceApi.js\nimport { getApiUrl, getAuthHeaders } from '../config/woocommerce';\n\nclass WooCommerceAPI {\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = getApiUrl(endpoint);\n      const options = {\n        method,\n        headers: getAuthHeaders(),\n      };\n\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n\n      console.log('Request URL:', url);\n      console.log('Request options:', options);\n\n      const response = await fetch(url, options);\n      \n      // Intentar obtener el cuerpo de la respuesta\n      const responseText = await response.text();\n      let responseData;\n      \n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = responseText;\n      }\n\n      if (!response.ok) {\n        console.error('Error response:', responseData);\n        throw new Error(`Error ${response.status}: ${responseData.message || responseData.code || response.statusText}`);\n      }\n\n      return responseData;\n    } catch (error) {\n      console.error('Error en la petición a WooCommerce:', error);\n      throw error;\n    }\n  }\n\n  // === PRODUCTOS ===\n  \n  // Obtener todos los productos\n  async getProducts(params = {}) {\n    const queryParams = new URLSearchParams({\n      per_page: 100,\n      ...params\n    }).toString();\n    \n    return this.request(`products?${queryParams}`);\n  }\n\n  // Obtener un producto por ID\n  async getProduct(id) {\n    return this.request(`products/${id}`);\n  }\n\n  // Obtener variaciones de un producto\n  async getProductVariations(productId) {\n    return this.request(`products/${productId}/variations?per_page=100`);\n  }\n\n  // Obtener atributos de productos\n  async getProductAttributes() {\n    return this.request('products/attributes');\n  }\n\n  // Obtener términos de un atributo\n  async getAttributeTerms(attributeId) {\n    return this.request(`products/attributes/${attributeId}/terms`);\n  }\n\n  // Obtener categorías de productos\n  async getCategories() {\n    return this.request('products/categories?per_page=100');\n  }\n\n  // === PEDIDOS ===\n  \n  // Crear un nuevo pedido\n  async createOrder(orderData) {\n    const order = {\n      payment_method: orderData.paymentMethod || 'cash',\n      payment_method_title: orderData.paymentMethodTitle || 'Pago en efectivo',\n      set_paid: false,\n      status: 'pending',\n      billing: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        city: orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL',\n        email: orderData.email || '',\n        phone: orderData.phone || ''\n      },\n      shipping: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        city: orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL'\n      },\n      line_items: orderData.items.map(item => {\n        const lineItem = {\n          product_id: parseInt(item.productId),\n          quantity: parseInt(item.quantity)\n        };\n\n        // Si tiene variación, agregar variation_id\n        if (item.variationId) {\n          lineItem.variation_id = parseInt(item.variationId);\n        }\n\n        // Si tiene meta data (personalizaciones)\n        if (item.customizations) {\n          lineItem.meta_data = [];\n          \n          if (item.customizations.extraIngredients?.length > 0) {\n            lineItem.meta_data.push({\n              key: 'ingredientes_extra',\n              value: item.customizations.extraIngredients.map(i => i.name).join(', ')\n            });\n          }\n\n          if (item.customizations.removedIngredients?.length > 0) {\n            lineItem.meta_data.push({\n              key: 'ingredientes_removidos',\n              value: item.customizations.removedIngredients.join(', ')\n            });\n          }\n\n          if (item.customizations.specialInstructions) {\n            lineItem.meta_data.push({\n              key: 'instrucciones_especiales',\n              value: item.customizations.specialInstructions\n            });\n          }\n\n          // Agregar campos de Advanced Product Fields\n          if (item.customizations.productAddons?.length > 0) {\n            item.customizations.productAddons.forEach(addon => {\n              lineItem.meta_data.push({\n                key: addon.key,\n                value: addon.value,\n                display_key: addon.display || addon.key,\n                display_value: addon.value\n              });\n            });\n          }\n        }\n\n        return lineItem;\n      }),\n      shipping_lines: orderData.shipping ? [{\n        method_id: orderData.shipping.method_id || 'flat_rate',\n        method_title: orderData.shipping.method_title || 'Envío a domicilio',\n        total: orderData.shipping.cost?.toString() || '0'\n      }] : []\n    };\n\n    return this.request('orders', 'POST', order);\n  }\n\n  // Obtener un pedido\n  async getOrder(orderId) {\n    return this.request(`orders/${orderId}`);\n  }\n\n  // Actualizar estado de un pedido\n  async updateOrderStatus(orderId, status) {\n    return this.request(`orders/${orderId}`, 'PUT', { status });\n  }\n\n  // === CLIENTES ===\n  \n  // Crear cliente\n  async createCustomer(customerData) {\n    return this.request('customers', 'POST', customerData);\n  }\n\n  // Obtener cliente\n  async getCustomer(customerId) {\n    return this.request(`customers/${customerId}`);\n  }\n}\n\nexport default new WooCommerceAPI();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}