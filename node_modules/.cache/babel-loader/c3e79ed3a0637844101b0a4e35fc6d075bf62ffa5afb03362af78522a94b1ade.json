{"ast":null,"code":"// src/services/escandalososApi.js\n\nclass EscandalososAPI {\n  constructor() {\n    // URL base de la API del plugin Escandalosos\n    this.baseUrl = 'https://escandalosospizzas.cl/wp/wp-json/escandalosos/v1';\n\n    // Cache para evitar llamadas repetidas\n    this.cache = {\n      config: null,\n      lastFetch: null,\n      cacheTime: 5 * 60 * 1000 // 5 minutos de cache\n    };\n  }\n\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = `${this.baseUrl}${endpoint}`;\n      const options = {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n      console.log('Escandalosos API Request:', url);\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n      const responseData = await response.json();\n      return responseData;\n    } catch (error) {\n      console.error('Error en la petición a Escandalosos API:', error);\n      throw error;\n    }\n  }\n\n  // Obtener toda la configuración del plugin\n  async getConfig(forceRefresh = false) {\n    // Verificar cache\n    if (!forceRefresh && this.cache.config && this.cache.lastFetch) {\n      const now = new Date().getTime();\n      if (now - this.cache.lastFetch < this.cache.cacheTime) {\n        console.log('Devolviendo configuración desde cache');\n        return this.cache.config;\n      }\n    }\n    try {\n      const config = await this.request('/config');\n\n      // Guardar en cache\n      this.cache.config = config;\n      this.cache.lastFetch = new Date().getTime();\n      console.log('Configuración Escandalosos obtenida:', config);\n      return config;\n    } catch (error) {\n      console.error('Error obteniendo configuración:', error);\n\n      // Si hay configuración en cache, devolverla aunque esté expirada\n      if (this.cache.config) {\n        console.warn('Devolviendo configuración desde cache expirado');\n        return this.cache.config;\n      }\n\n      // Devolver configuración vacía si no hay nada\n      return {\n        products: {},\n        labels: []\n      };\n    }\n  }\n\n  // Obtener configuración de un producto específico\n  async getProductConfig(productId) {\n    const config = await this.getConfig();\n    return config.products[productId] || null;\n  }\n\n  // Verificar si un producto es combo\n  async isCombo(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    return (productConfig === null || productConfig === void 0 ? void 0 : productConfig.is_combo) || false;\n  }\n\n  // Obtener configuración de combo de un producto\n  async getComboConfig(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    if (!productConfig || !productConfig.is_combo) {\n      return null;\n    }\n    return productConfig.combo_config || null;\n  }\n\n  // Obtener etiquetas de un producto\n  async getProductLabels(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    return (productConfig === null || productConfig === void 0 ? void 0 : productConfig.labels) || [];\n  }\n\n  // Obtener todas las etiquetas disponibles\n  async getAllLabels() {\n    const config = await this.getConfig();\n    return config.labels || [];\n  }\n\n  // Limpiar cache\n  clearCache() {\n    this.cache = {\n      config: null,\n      lastFetch: null,\n      cacheTime: 5 * 60 * 1000\n    };\n  }\n\n  // Método helper para formatear la configuración de combo\n  formatComboConfig(comboConfig) {\n    if (!comboConfig) return null;\n\n    // Convertir el objeto a un array más fácil de manejar\n    const formattedConfig = [];\n    for (const [categoryId, config] of Object.entries(comboConfig)) {\n      formattedConfig.push({\n        categoryId: categoryId,\n        name: config.name || 'Categoría',\n        minSelection: config.minSelection || 1,\n        maxSelection: config.maxSelection || 1\n      });\n    }\n    return formattedConfig;\n  }\n\n  // Validar selecciones de combo\n  validateComboSelections(comboConfig, selections) {\n    const errors = [];\n    for (const [categoryId, config] of Object.entries(comboConfig)) {\n      const categorySelections = selections[categoryId] || [];\n      if (categorySelections.length < config.minSelection) {\n        errors.push({\n          categoryId,\n          message: `Debes seleccionar al menos ${config.minSelection} opción(es) en ${config.name}`\n        });\n      }\n      if (categorySelections.length > config.maxSelection) {\n        errors.push({\n          categoryId,\n          message: `No puedes seleccionar más de ${config.maxSelection} opción(es) en ${config.name}`\n        });\n      }\n    }\n    return errors;\n  }\n}\n\n// Exportar una instancia única\nexport default new EscandalososAPI();","map":{"version":3,"names":["EscandalososAPI","constructor","baseUrl","cache","config","lastFetch","cacheTime","request","endpoint","method","data","url","options","headers","body","JSON","stringify","console","log","response","fetch","ok","Error","status","statusText","responseData","json","error","getConfig","forceRefresh","now","Date","getTime","warn","products","labels","getProductConfig","productId","isCombo","productConfig","is_combo","getComboConfig","combo_config","getProductLabels","getAllLabels","clearCache","formatComboConfig","comboConfig","formattedConfig","categoryId","Object","entries","push","name","minSelection","maxSelection","validateComboSelections","selections","errors","categorySelections","length","message"],"sources":["/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/services/escandalososApi.js"],"sourcesContent":["// src/services/escandalososApi.js\n\nclass EscandalososAPI {\n  constructor() {\n    // URL base de la API del plugin Escandalosos\n    this.baseUrl = 'https://escandalosospizzas.cl/wp/wp-json/escandalosos/v1';\n    \n    // Cache para evitar llamadas repetidas\n    this.cache = {\n      config: null,\n      lastFetch: null,\n      cacheTime: 5 * 60 * 1000 // 5 minutos de cache\n    };\n  }\n\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = `${this.baseUrl}${endpoint}`;\n      const options = {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      };\n\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n\n      console.log('Escandalosos API Request:', url);\n\n      const response = await fetch(url, options);\n      \n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      const responseData = await response.json();\n      return responseData;\n      \n    } catch (error) {\n      console.error('Error en la petición a Escandalosos API:', error);\n      throw error;\n    }\n  }\n\n  // Obtener toda la configuración del plugin\n  async getConfig(forceRefresh = false) {\n    // Verificar cache\n    if (!forceRefresh && this.cache.config && this.cache.lastFetch) {\n      const now = new Date().getTime();\n      if (now - this.cache.lastFetch < this.cache.cacheTime) {\n        console.log('Devolviendo configuración desde cache');\n        return this.cache.config;\n      }\n    }\n\n    try {\n      const config = await this.request('/config');\n      \n      // Guardar en cache\n      this.cache.config = config;\n      this.cache.lastFetch = new Date().getTime();\n      \n      console.log('Configuración Escandalosos obtenida:', config);\n      return config;\n      \n    } catch (error) {\n      console.error('Error obteniendo configuración:', error);\n      \n      // Si hay configuración en cache, devolverla aunque esté expirada\n      if (this.cache.config) {\n        console.warn('Devolviendo configuración desde cache expirado');\n        return this.cache.config;\n      }\n      \n      // Devolver configuración vacía si no hay nada\n      return {\n        products: {},\n        labels: []\n      };\n    }\n  }\n\n  // Obtener configuración de un producto específico\n  async getProductConfig(productId) {\n    const config = await this.getConfig();\n    return config.products[productId] || null;\n  }\n\n  // Verificar si un producto es combo\n  async isCombo(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    return productConfig?.is_combo || false;\n  }\n\n  // Obtener configuración de combo de un producto\n  async getComboConfig(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    \n    if (!productConfig || !productConfig.is_combo) {\n      return null;\n    }\n    \n    return productConfig.combo_config || null;\n  }\n\n  // Obtener etiquetas de un producto\n  async getProductLabels(productId) {\n    const productConfig = await this.getProductConfig(productId);\n    return productConfig?.labels || [];\n  }\n\n  // Obtener todas las etiquetas disponibles\n  async getAllLabels() {\n    const config = await this.getConfig();\n    return config.labels || [];\n  }\n\n  // Limpiar cache\n  clearCache() {\n    this.cache = {\n      config: null,\n      lastFetch: null,\n      cacheTime: 5 * 60 * 1000\n    };\n  }\n\n  // Método helper para formatear la configuración de combo\n  formatComboConfig(comboConfig) {\n    if (!comboConfig) return null;\n    \n    // Convertir el objeto a un array más fácil de manejar\n    const formattedConfig = [];\n    \n    for (const [categoryId, config] of Object.entries(comboConfig)) {\n      formattedConfig.push({\n        categoryId: categoryId,\n        name: config.name || 'Categoría',\n        minSelection: config.minSelection || 1,\n        maxSelection: config.maxSelection || 1\n      });\n    }\n    \n    return formattedConfig;\n  }\n\n  // Validar selecciones de combo\n  validateComboSelections(comboConfig, selections) {\n    const errors = [];\n    \n    for (const [categoryId, config] of Object.entries(comboConfig)) {\n      const categorySelections = selections[categoryId] || [];\n      \n      if (categorySelections.length < config.minSelection) {\n        errors.push({\n          categoryId,\n          message: `Debes seleccionar al menos ${config.minSelection} opción(es) en ${config.name}`\n        });\n      }\n      \n      if (categorySelections.length > config.maxSelection) {\n        errors.push({\n          categoryId,\n          message: `No puedes seleccionar más de ${config.maxSelection} opción(es) en ${config.name}`\n        });\n      }\n    }\n    \n    return errors;\n  }\n}\n\n// Exportar una instancia única\nexport default new EscandalososAPI();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}