{"ast":null,"code":"var _jsxFileName = \"/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/components/CustomizationModal/CustomizationModal.jsx\",\n  _s = $RefreshSig$();\n// src/components/CustomizationModal/CustomizationModal.jsx\nimport React, { useState, useContext, useEffect } from 'react';\nimport { X, Plus, Minus, Info, Check, Loader, Pizza, Upload, ShoppingCart } from 'lucide-react';\nimport { CartContext } from '../../context/CartContext';\nimport woocommerceApi from '../../services/woocommerceApi';\nimport './CustomizationModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomizationModal = ({\n  product,\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const {\n    addToCart\n  } = useContext(CartContext);\n\n  // Estados para datos de WooCommerce\n  const [variations, setVariations] = useState([]);\n  const [attributes, setAttributes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Estados para Advanced Product Fields\n  const [productAddons, setProductAddons] = useState([]);\n  const [addonValues, setAddonValues] = useState({});\n  const [addonFiles, setAddonFiles] = useState({});\n\n  // Estados de selección\n  const [selectedAttributes, setSelectedAttributes] = useState({});\n  const [selectedVariation, setSelectedVariation] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [specialInstructions, setSpecialInstructions] = useState('');\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [addingToCart, setAddingToCart] = useState(false);\n\n  // Reset estados cuando se abre el modal\n  useEffect(() => {\n    if (isOpen && product) {\n      resetForm();\n      loadProductData();\n    }\n  }, [isOpen, product]);\n\n  // Actualizar precio cuando cambia la selección\n  useEffect(() => {\n    updatePrice();\n  }, [selectedVariation, quantity, product, addonValues]);\n  const resetForm = () => {\n    setSelectedAttributes({});\n    setSelectedVariation(null);\n    setQuantity(1);\n    setSpecialInstructions('');\n    setProductAddons([]);\n    setAddonValues({});\n    setAddonFiles({});\n    setError(null);\n  };\n  const loadProductData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Debugging: Ver toda la estructura del producto\n      console.log('=== PRODUCTO COMPLETO ===');\n      console.log(product);\n      console.log('=== META DATA ===');\n      console.log(product.meta_data);\n      console.log('=== TODAS LAS PROPIEDADES ===');\n      console.log(Object.keys(product));\n\n      // Si es un producto variable, cargar variaciones\n      if (product.type === 'variable') {\n        const variationsData = await woocommerceApi.getProductVariations(product.id);\n        setVariations(variationsData || []);\n\n        // Extraer atributos del producto\n        if (product.attributes) {\n          const variableAttributes = product.attributes.filter(attr => attr.variation);\n          setAttributes(variableAttributes);\n\n          // Establecer valores por defecto\n          const defaultAttributes = {};\n          variableAttributes.forEach(attr => {\n            if (attr.options && attr.options.length > 0) {\n              defaultAttributes[attr.name] = attr.options[0];\n            }\n          });\n          setSelectedAttributes(defaultAttributes);\n\n          // Buscar variación por defecto\n          findMatchingVariation(defaultAttributes);\n        }\n      } else {\n        // Para productos simples, establecer el precio directamente\n        setTotalPrice(parseFloat(product.price) * quantity);\n      }\n\n      // Cargar Advanced Product Fields si existen\n      await loadProductAddons();\n    } catch (err) {\n      console.error('Error loading product data:', err);\n      setError('Error al cargar las opciones del producto. Por favor, intenta de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadProductAddons = async () => {\n    console.log('=== BUSCANDO ADDONS ===');\n\n    // Verificar si el producto tiene campos adicionales del plugin Advanced Product Fields\n    if (product.meta_data) {\n      console.log('Meta data encontrada:', product.meta_data);\n\n      // Buscar el campo _wapf_fieldgroup\n      const fieldGroupData = product.meta_data.find(meta => meta.key === '_wapf_fieldgroup');\n      if (fieldGroupData && fieldGroupData.value) {\n        console.log('Field group data encontrada:', fieldGroupData.value);\n\n        // El valor puede ser un ID de grupo o un array de IDs\n        let groupIds = [];\n        if (Array.isArray(fieldGroupData.value)) {\n          groupIds = fieldGroupData.value;\n        } else if (typeof fieldGroupData.value === 'object' && fieldGroupData.value.groups) {\n          groupIds = fieldGroupData.value.groups;\n        } else if (typeof fieldGroupData.value === 'string' || typeof fieldGroupData.value === 'number') {\n          groupIds = [fieldGroupData.value];\n        }\n        console.log('Group IDs:', groupIds);\n\n        // Si tenemos IDs de grupos, necesitamos obtener los campos de esos grupos\n        // Para esto necesitamos hacer una petición adicional o el plugin debe exponer los campos\n\n        // Por ahora, vamos a buscar si hay campos directamente en el producto\n        // El plugin también puede guardar los campos compilados en otro meta field\n        const possibleFieldKeys = ['_wapf_fields', '_wapf_field_groups_fields', 'wapf_fields', '_product_addons'];\n        for (const key of possibleFieldKeys) {\n          const fieldsData = product.meta_data.find(meta => meta.key === key);\n          if (fieldsData && fieldsData.value) {\n            console.log(`Campos encontrados con key \"${key}\":`, fieldsData.value);\n            const fields = Array.isArray(fieldsData.value) ? fieldsData.value : [fieldsData.value];\n            setProductAddons(fields);\n            initializeAddonValues(fields);\n            return;\n          }\n        }\n\n        // Si no encontramos los campos compilados, intentamos obtenerlos via API personalizada\n        if (groupIds.length > 0 || true) {\n          // Siempre intentar con la API personalizada\n          console.log('Intentando obtener campos del producto via API...');\n          console.log('ID del producto:', product.id);\n          try {\n            // Construir la URL completa\n            const apiUrl = `https://escandalosospizzas.cl/wp/wp-json/custom/v1/product-fields/${product.id}`;\n            console.log('URL de la API:', apiUrl);\n            const response = await fetch(apiUrl);\n            console.log('Status de respuesta:', response.status);\n            if (response.ok) {\n              const data = await response.json();\n              console.log('Respuesta completa de la API:', data);\n              console.log('Tipo de respuesta:', typeof data);\n              console.log('Es array?:', Array.isArray(data));\n              console.log('Claves del objeto:', Object.keys(data));\n              console.log('Valores del objeto:', Object.values(data));\n\n              // Intentar diferentes estructuras de respuesta\n              let fields = null;\n\n              // ESTRUCTURA ESPECÍFICA DE WAPF (Advanced Product Fields)\n              if (data && data.field_groups && data.field_groups.fields) {\n                console.log('Campos encontrados en field_groups.fields');\n                fields = data.field_groups.fields;\n              }\n              // Si la respuesta es un array directo\n              else if (Array.isArray(data)) {\n                fields = data;\n              }\n              // Si los campos están en data.fields\n              else if (data && data.fields && Array.isArray(data.fields)) {\n                fields = data.fields;\n              }\n              // Si los campos están en data.data\n              else if (data && data.data) {\n                fields = data.data;\n              }\n              // Si la respuesta tiene una propiedad items\n              else if (data && data.items) {\n                fields = data.items;\n              }\n              // Si la respuesta tiene una propiedad addons\n              else if (data && data.addons) {\n                fields = data.addons;\n              }\n              // Si la respuesta tiene una propiedad product_fields\n              else if (data && data.product_fields) {\n                fields = data.product_fields;\n              }\n              // Si la respuesta es un objeto con campos como propiedades\n              else if (data && typeof data === 'object' && !Array.isArray(data)) {\n                // Buscar cualquier propiedad que sea un array\n                const keys = Object.keys(data);\n                for (const key of keys) {\n                  if (Array.isArray(data[key])) {\n                    console.log(`Encontrado array de campos en la propiedad: ${key}`);\n                    fields = data[key];\n                    break;\n                  }\n                }\n\n                // Si no encontramos arrays, tal vez los campos están directamente en el objeto\n                if (!fields && keys.length > 0) {\n                  // Verificar si el objeto tiene estructura de campo\n                  const firstKey = keys[0];\n                  if (data[firstKey] && (data[firstKey].type || data[firstKey].label || data[firstKey].name)) {\n                    // Convertir el objeto en array\n                    fields = Object.values(data);\n                  }\n                }\n              }\n              if (fields) {\n                console.log('Campos encontrados y procesados:', fields);\n                // Log de cada campo para debug\n                fields.forEach(field => {\n                  console.log('Campo individual:', {\n                    id: field.id,\n                    label: field.label,\n                    title: field.title,\n                    name: field.name,\n                    type: field.type,\n                    required: field.required,\n                    pricing: field.pricing,\n                    options: field.options\n                  });\n                });\n                setProductAddons(fields);\n                initializeAddonValues(fields);\n                return;\n              } else {\n                console.log('No se pudieron extraer campos de la respuesta');\n              }\n            } else {\n              console.log('La API devolvió un error:', response.status, response.statusText);\n            }\n          } catch (error) {\n            console.log('Error obteniendo campos via API:', error);\n          }\n        }\n      }\n    }\n\n    // Si no encontramos campos via meta_data, verificar si están directamente en el producto\n    if (product.product_fields) {\n      console.log('Campos encontrados en product.product_fields:', product.product_fields);\n      setProductAddons(product.product_fields);\n      initializeAddonValues(product.product_fields);\n    } else if (product.addons) {\n      console.log('Campos encontrados en product.addons:', product.addons);\n      setProductAddons(product.addons);\n      initializeAddonValues(product.addons);\n    }\n    console.log('=== ESTADO FINAL DE ADDONS ===');\n    console.log('productAddons establecidos:', productAddons);\n  };\n  const initializeAddonValues = fields => {\n    const defaultValues = {};\n    fields.forEach(field => {\n      const fieldId = field.id || field.name || field.field_id;\n      if (field.type === 'checkbox' || field.type === 'checkboxes' || field.type === 'multiple_choice') {\n        defaultValues[fieldId] = [];\n      } else if (field.type === 'number' && field.min !== undefined) {\n        defaultValues[fieldId] = field.min;\n      } else if (field.type === 'true_false') {\n        defaultValues[fieldId] = false;\n      } else if (field.type === 'radio' || field.type === 'radiobutton') {\n        var _field$options;\n        // Para radio buttons, buscar si hay una opción seleccionada por defecto\n        const choices = ((_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.choices) || field.options || [];\n        const defaultChoice = choices.find(choice => choice.selected === true);\n        defaultValues[fieldId] = defaultChoice ? defaultChoice.label || defaultChoice.value : '';\n      } else {\n        defaultValues[fieldId] = '';\n      }\n    });\n    console.log('Valores iniciales de addons:', defaultValues);\n    setAddonValues(defaultValues);\n  };\n  const handleAttributeChange = (attributeName, value) => {\n    const newAttributes = {\n      ...selectedAttributes,\n      [attributeName]: value\n    };\n    setSelectedAttributes(newAttributes);\n\n    // Buscar variación que coincida con los atributos seleccionados\n    findMatchingVariation(newAttributes);\n  };\n  const findMatchingVariation = attributes => {\n    if (!variations || variations.length === 0) return;\n    const matching = variations.find(variation => {\n      return variation.attributes.every(attr => {\n        const normalizedAttrName = attr.name.toLowerCase().replace(/-/g, ' ');\n        const selectedValue = attributes[attr.name] || attributes[normalizedAttrName];\n        return selectedValue == attr.option;\n      });\n    });\n    setSelectedVariation(matching || null);\n  };\n  const handleAddonChange = (fieldId, value) => {\n    setAddonValues(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n  };\n  const handleFileUpload = (fieldId, file) => {\n    if (file) {\n      setAddonFiles(prev => ({\n        ...prev,\n        [fieldId]: file\n      }));\n      setAddonValues(prev => ({\n        ...prev,\n        [fieldId]: file.name\n      }));\n    }\n  };\n  const calculateAddonPrice = () => {\n    let addonTotal = 0;\n    productAddons.forEach(addon => {\n      var _addon$options, _addon$options2;\n      const fieldId = addon.id || addon.name;\n      const value = addonValues[fieldId];\n      if (!value || Array.isArray(value) && value.length === 0) return;\n\n      // Para WAPF, el precio puede estar en addon.pricing\n      if (addon.pricing && addon.pricing.enabled && addon.pricing.amount) {\n        if (addon.pricing.type === 'fixed') {\n          addonTotal += parseFloat(addon.pricing.amount);\n        } else if (addon.pricing.type === 'quantity_based') {\n          addonTotal += parseFloat(addon.pricing.amount) * quantity;\n        }\n      }\n\n      // Precio fijo tradicional\n      else if (addon.price_type === 'flat_fee' && addon.price) {\n        addonTotal += parseFloat(addon.price);\n      }\n\n      // Precio basado en cantidad\n      else if (addon.price_type === 'quantity_based' && addon.price) {\n        addonTotal += parseFloat(addon.price) * quantity;\n      }\n\n      // Precio por carácter (para campos de texto)\n      else if (addon.price_type === 'per_char' && addon.price && typeof value === 'string') {\n        addonTotal += parseFloat(addon.price) * value.length;\n      }\n\n      // Para campos con opciones (radio, select, checkbox)\n      else if (((_addon$options = addon.options) !== null && _addon$options !== void 0 && _addon$options.choices || addon.options) && Array.isArray(((_addon$options2 = addon.options) === null || _addon$options2 === void 0 ? void 0 : _addon$options2.choices) || addon.options)) {\n        var _addon$options3;\n        const options = ((_addon$options3 = addon.options) === null || _addon$options3 === void 0 ? void 0 : _addon$options3.choices) || addon.options;\n        options.forEach(option => {\n          const isSelected = Array.isArray(value) ? value.includes(option.label || option.value) : value === (option.label || option.value);\n          if (isSelected && (option.pricing_amount || option.price)) {\n            const optionPrice = option.pricing_amount || option.price;\n            if (option.pricing_type === 'quantity_based' || option.price_type === 'quantity_based') {\n              addonTotal += parseFloat(optionPrice) * quantity;\n            } else {\n              addonTotal += parseFloat(optionPrice);\n            }\n          }\n        });\n      }\n    });\n    return addonTotal;\n  };\n  const updatePrice = () => {\n    let basePrice = 0;\n    if (selectedVariation && selectedVariation.price) {\n      basePrice = parseFloat(selectedVariation.price);\n    } else if (product && product.price) {\n      basePrice = parseFloat(product.price);\n    }\n    const addonPrice = calculateAddonPrice();\n    setTotalPrice((basePrice + addonPrice) * quantity);\n  };\n  const formatPrice = price => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(price);\n  };\n  const isValidSelection = () => {\n    if (product.type === 'variable') {\n      // Para productos variables, verificar que se haya seleccionado una variación válida\n      if (!selectedVariation || selectedVariation.stock_status === 'outofstock') {\n        return false;\n      }\n    }\n\n    // Validar campos requeridos de Advanced Product Fields\n    for (const addon of productAddons) {\n      if (addon.required) {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        if (!value || Array.isArray(value) && value.length === 0) {\n          setError(`Por favor, completa el campo: ${addon.title || addon.name}`);\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  const handleAddToCart = async () => {\n    if (!isValidSelection()) {\n      if (!error) {\n        setError('Por favor, selecciona todas las opciones requeridas');\n      }\n      return;\n    }\n    setAddingToCart(true);\n    try {\n      var _selectedVariation$im, _product$images, _product$images$;\n      // Preparar meta_data para Advanced Product Fields\n      const addonMetaData = [];\n      productAddons.forEach(addon => {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        if (value && !(Array.isArray(value) && value.length === 0)) {\n          // Agregar el campo a meta_data\n          addonMetaData.push({\n            key: addon.name || addon.title,\n            value: Array.isArray(value) ? value.join(', ') : value,\n            display: addon.title || addon.name,\n            price: addon.price || 0,\n            price_type: addon.price_type || 'flat_fee'\n          });\n        }\n      });\n      const cartItem = {\n        id: selectedVariation ? `${product.id}-${selectedVariation.id}-${Date.now()}` : `${product.id}-${Date.now()}`,\n        productId: product.id,\n        variationId: selectedVariation === null || selectedVariation === void 0 ? void 0 : selectedVariation.id,\n        name: product.name,\n        price: totalPrice / quantity,\n        // Precio unitario incluyendo addons\n        image: (selectedVariation === null || selectedVariation === void 0 ? void 0 : (_selectedVariation$im = selectedVariation.image) === null || _selectedVariation$im === void 0 ? void 0 : _selectedVariation$im.src) || ((_product$images = product.images) === null || _product$images === void 0 ? void 0 : (_product$images$ = _product$images[0]) === null || _product$images$ === void 0 ? void 0 : _product$images$.src) || '',\n        quantity,\n        customizations: {\n          attributes: selectedAttributes,\n          specialInstructions: specialInstructions.trim(),\n          variationDetails: selectedVariation ? {\n            name: selectedVariation.name,\n            attributes: selectedVariation.attributes\n          } : null,\n          // Agregar datos de Advanced Product Fields\n          productAddons: addonMetaData,\n          addonValues: addonValues,\n          addonFiles: Object.keys(addonFiles).length > 0 ? addonFiles : null\n        }\n      };\n      addToCart(cartItem);\n\n      // Mostrar mensaje de éxito\n      setTimeout(() => {\n        onClose();\n        resetForm();\n      }, 500);\n    } catch (err) {\n      setError('Error al agregar al carrito. Por favor, intenta de nuevo.');\n    } finally {\n      setAddingToCart(false);\n    }\n  };\n  const renderAddonField = addon => {\n    var _addon$options4, _addon$options5, _addon$options6;\n    const fieldId = addon.id || addon.name;\n    const value = addonValues[fieldId] || '';\n    switch (addon.type) {\n      case 'text':\n      case 'custom_text':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          placeholder: addon.placeholder || '',\n          maxLength: addon.max || undefined,\n          className: \"addon-text-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this);\n      case 'textarea':\n      case 'custom_textarea':\n        return /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          placeholder: addon.placeholder || '',\n          maxLength: addon.max || undefined,\n          rows: 4,\n          className: \"addon-textarea\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, parseFloat(e.target.value) || 0),\n          min: addon.min || undefined,\n          max: addon.max || undefined,\n          step: addon.step || 1,\n          className: \"addon-number-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          placeholder: addon.placeholder || 'email@ejemplo.com',\n          className: \"addon-email-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this);\n      case 'select':\n      case 'dropdown':\n        const selectOptions = ((_addon$options4 = addon.options) === null || _addon$options4 === void 0 ? void 0 : _addon$options4.choices) || addon.options || [];\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          className: \"addon-select\",\n          required: addon.required,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una opci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), selectOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.label || option.value,\n            children: [option.label || option.value, option.pricing_amount && option.pricing_amount > 0 && ` (+${formatPrice(option.pricing_amount)})`]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this);\n      case 'radio':\n      case 'radiobutton':\n        // Obtener las opciones correctamente según la estructura de WAPF\n        const radioOptions = ((_addon$options5 = addon.options) === null || _addon$options5 === void 0 ? void 0 : _addon$options5.choices) || addon.options || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addon-radio-group\",\n          children: radioOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"addon-radio-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: fieldId,\n              value: option.label || option.value,\n              checked: value === (option.label || option.value),\n              onChange: e => handleAddonChange(fieldId, e.target.value),\n              required: addon.required\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-label\",\n              children: [option.label || option.value, option.pricing_amount && option.pricing_amount > 0 && ` (+${formatPrice(option.pricing_amount)})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this);\n      case 'checkbox':\n      case 'checkboxes':\n      case 'multiple_choice':\n        const checkboxOptions = ((_addon$options6 = addon.options) === null || _addon$options6 === void 0 ? void 0 : _addon$options6.choices) || addon.options || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addon-checkbox-group\",\n          children: checkboxOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"addon-checkbox-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: option.label || option.value,\n              checked: Array.isArray(value) && value.includes(option.label || option.value),\n              onChange: e => {\n                const optionValue = option.label || option.value;\n                const currentValues = Array.isArray(value) ? value : [];\n                if (e.target.checked) {\n                  handleAddonChange(fieldId, [...currentValues, optionValue]);\n                } else {\n                  handleAddonChange(fieldId, currentValues.filter(v => v !== optionValue));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkbox-label\",\n              children: [option.label || option.value, option.pricing_amount && option.pricing_amount > 0 && ` (+${formatPrice(option.pricing_amount)})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this);\n      case 'file':\n      case 'file_upload':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addon-file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-upload-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => handleFileUpload(fieldId, e.target.files[0]),\n              accept: addon.allowed_types || '*',\n              required: addon.required,\n              className: \"file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-upload-button\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 17\n              }, this), addonFiles[fieldId] ? addonFiles[fieldId].name : 'Seleccionar archivo']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), addon.max_size && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-size-info\",\n            children: [\"Tama\\xF1o m\\xE1ximo: \", addon.max_size, \"MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this);\n      case 'color':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: value || '#000000',\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          className: \"addon-color-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this);\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: value,\n          onChange: e => handleAddonChange(fieldId, e.target.value),\n          min: addon.min_date || undefined,\n          max: addon.max_date || undefined,\n          className: \"addon-date-input\",\n          required: addon.required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this);\n      case 'true_false':\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"addon-checkbox-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: value === true,\n            onChange: e => handleAddonChange(fieldId, e.target.checked),\n            required: addon.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkbox-label\",\n            children: addon.true_label || 'Sí'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this);\n      default:\n        console.log(`Tipo de campo no reconocido: ${addon.type}`);\n        return null;\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customization-modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customization-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Personalizar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"loading-spinner\",\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cargando opciones...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadProductData,\n          className: \"retry-button\",\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-product-info\",\n          children: [product.images && product.images[0] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.images[0].src,\n            alt: product.name,\n            className: \"customization-product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"customization-product-image placeholder\",\n            children: /*#__PURE__*/_jsxDEV(Pizza, {\n              size: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 17\n            }, this), product.short_description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"product-description\",\n              dangerouslySetInnerHTML: {\n                __html: product.short_description\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this), attributes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-section\",\n          children: attributes.map(attribute => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attribute-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: attribute.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 21\n            }, this), attribute.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"section-description\",\n              children: attribute.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attribute-options\",\n              children: attribute.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"attribute-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: attribute.name,\n                  value: option,\n                  checked: selectedAttributes[attribute.name] === option,\n                  onChange: () => handleAttributeChange(attribute.name, option)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 778,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"option-check\",\n                    children: /*#__PURE__*/_jsxDEV(Check, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 787,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 29\n                  }, this), option]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 27\n                }, this)]\n              }, option, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 21\n            }, this)]\n          }, attribute.id || attribute.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 15\n        }, this), productAddons.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Opciones adicionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 17\n          }, this), productAddons.map((addon, index) => {\n            var _addon$pricing, _addon$pricing2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addon-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"addon-label\",\n                children: [addon.label || addon.title || addon.name || 'Campo adicional', addon.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 42\n                }, this), ((_addon$pricing = addon.pricing) === null || _addon$pricing === void 0 ? void 0 : _addon$pricing.enabled) && ((_addon$pricing2 = addon.pricing) === null || _addon$pricing2 === void 0 ? void 0 : _addon$pricing2.amount) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"addon-price\",\n                  children: addon.pricing.type === 'quantity_based' ? ` (+${formatPrice(addon.pricing.amount)} por unidad)` : ` (+${formatPrice(addon.pricing.amount)})`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 21\n              }, this), addon.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"addon-description\",\n                children: addon.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 23\n              }, this), renderAddonField(addon)]\n            }, addon.id || addon.name || index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 15\n        }, this), selectedVariation && (selectedVariation.stock_status === 'outofstock' || selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"variation-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"variation-details\",\n            children: selectedVariation.stock_status === 'outofstock' ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"out-of-stock\",\n              children: \"\\u26A0\\uFE0F Producto agotado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 21\n            }, this) : selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"low-stock\",\n              children: [\"\\u26A1 \\xDAltimas \", selectedVariation.stock_quantity, \" unidades\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"customization-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Instrucciones especiales (opcional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-description\",\n            children: \"\\xBFAlguna preferencia especial?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"special-instructions\",\n            value: specialInstructions,\n            onChange: e => setSpecialInstructions(e.target.value),\n            placeholder: \"Ej: Sin cebolla, extra queso, etc.\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-price-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Cantidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setQuantity(Math.max(1, quantity - 1)),\n                disabled: quantity <= 1,\n                children: /*#__PURE__*/_jsxDEV(Minus, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quantity-value\",\n                children: quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setQuantity(quantity + 1),\n                disabled: (selectedVariation === null || selectedVariation === void 0 ? void 0 : selectedVariation.stock_status) === 'outofstock',\n                children: /*#__PURE__*/_jsxDEV(Plus, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"total-price\",\n              children: formatPrice(totalPrice)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `add-to-cart-button ${addingToCart ? 'loading' : ''}`,\n          onClick: handleAddToCart,\n          disabled: addingToCart || (selectedVariation === null || selectedVariation === void 0 ? void 0 : selectedVariation.stock_status) === 'outofstock',\n          children: addingToCart ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader, {\n              className: \"button-spinner\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 19\n            }, this), \"Agregando...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 19\n            }, this), \"Agregar al Carrito\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 722,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomizationModal, \"4XaR/Sq9+ME7045Ck6oUWYvYuN0=\");\n_c = CustomizationModal;\nexport default CustomizationModal;\nvar _c;\n$RefreshReg$(_c, \"CustomizationModal\");","map":{"version":3,"names":["React","useState","useContext","useEffect","X","Plus","Minus","Info","Check","Loader","Pizza","Upload","ShoppingCart","CartContext","woocommerceApi","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomizationModal","product","isOpen","onClose","_s","addToCart","variations","setVariations","attributes","setAttributes","loading","setLoading","error","setError","productAddons","setProductAddons","addonValues","setAddonValues","addonFiles","setAddonFiles","selectedAttributes","setSelectedAttributes","selectedVariation","setSelectedVariation","quantity","setQuantity","specialInstructions","setSpecialInstructions","totalPrice","setTotalPrice","addingToCart","setAddingToCart","resetForm","loadProductData","updatePrice","console","log","meta_data","Object","keys","type","variationsData","getProductVariations","id","variableAttributes","filter","attr","variation","defaultAttributes","forEach","options","length","name","findMatchingVariation","parseFloat","price","loadProductAddons","err","fieldGroupData","find","meta","key","value","groupIds","Array","isArray","groups","possibleFieldKeys","fieldsData","fields","initializeAddonValues","apiUrl","response","fetch","status","ok","data","json","values","field_groups","items","addons","product_fields","firstKey","label","field","title","required","pricing","statusText","defaultValues","fieldId","field_id","min","undefined","_field$options","choices","defaultChoice","choice","selected","handleAttributeChange","attributeName","newAttributes","matching","every","normalizedAttrName","toLowerCase","replace","selectedValue","option","handleAddonChange","prev","handleFileUpload","file","calculateAddonPrice","addonTotal","addon","_addon$options","_addon$options2","enabled","amount","price_type","_addon$options3","isSelected","includes","pricing_amount","optionPrice","pricing_type","basePrice","addonPrice","formatPrice","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","isValidSelection","stock_status","handleAddToCart","_selectedVariation$im","_product$images","_product$images$","addonMetaData","push","join","display","cartItem","Date","now","productId","variationId","image","src","images","customizations","trim","variationDetails","setTimeout","renderAddonField","_addon$options4","_addon$options5","_addon$options6","onChange","e","target","placeholder","maxLength","max","className","fileName","_jsxFileName","lineNumber","columnNumber","rows","step","selectOptions","children","map","index","radioOptions","checked","checkboxOptions","optionValue","currentValues","v","files","accept","allowed_types","size","max_size","min_date","max_date","true_label","onClick","stopPropagation","alt","short_description","dangerouslySetInnerHTML","__html","attribute","description","_addon$pricing","_addon$pricing2","stock_quantity","Math","disabled","_c","$RefreshReg$"],"sources":["/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/components/CustomizationModal/CustomizationModal.jsx"],"sourcesContent":["// src/components/CustomizationModal/CustomizationModal.jsx\nimport React, { useState, useContext, useEffect } from 'react';\nimport { X, Plus, Minus, Info, Check, Loader, Pizza, Upload, ShoppingCart } from 'lucide-react';\nimport { CartContext } from '../../context/CartContext';\nimport woocommerceApi from '../../services/woocommerceApi';\nimport './CustomizationModal.css';\n\nconst CustomizationModal = ({ product, isOpen, onClose }) => {\n  const { addToCart } = useContext(CartContext);\n  \n  // Estados para datos de WooCommerce\n  const [variations, setVariations] = useState([]);\n  const [attributes, setAttributes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Estados para Advanced Product Fields\n  const [productAddons, setProductAddons] = useState([]);\n  const [addonValues, setAddonValues] = useState({});\n  const [addonFiles, setAddonFiles] = useState({});\n  \n  // Estados de selección\n  const [selectedAttributes, setSelectedAttributes] = useState({});\n  const [selectedVariation, setSelectedVariation] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [specialInstructions, setSpecialInstructions] = useState('');\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [addingToCart, setAddingToCart] = useState(false);\n\n  // Reset estados cuando se abre el modal\n  useEffect(() => {\n    if (isOpen && product) {\n      resetForm();\n      loadProductData();\n    }\n  }, [isOpen, product]);\n\n  // Actualizar precio cuando cambia la selección\n  useEffect(() => {\n    updatePrice();\n  }, [selectedVariation, quantity, product, addonValues]);\n\n  const resetForm = () => {\n    setSelectedAttributes({});\n    setSelectedVariation(null);\n    setQuantity(1);\n    setSpecialInstructions('');\n    setProductAddons([]);\n    setAddonValues({});\n    setAddonFiles({});\n    setError(null);\n  };\n\n  const loadProductData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Debugging: Ver toda la estructura del producto\n      console.log('=== PRODUCTO COMPLETO ===');\n      console.log(product);\n      console.log('=== META DATA ===');\n      console.log(product.meta_data);\n      console.log('=== TODAS LAS PROPIEDADES ===');\n      console.log(Object.keys(product));\n      \n      // Si es un producto variable, cargar variaciones\n      if (product.type === 'variable') {\n        const variationsData = await woocommerceApi.getProductVariations(product.id);\n        setVariations(variationsData || []);\n        \n        // Extraer atributos del producto\n        if (product.attributes) {\n          const variableAttributes = product.attributes.filter(attr => attr.variation);\n          setAttributes(variableAttributes);\n          \n          // Establecer valores por defecto\n          const defaultAttributes = {};\n          variableAttributes.forEach(attr => {\n            if (attr.options && attr.options.length > 0) {\n              defaultAttributes[attr.name] = attr.options[0];\n            }\n          });\n          setSelectedAttributes(defaultAttributes);\n          \n          // Buscar variación por defecto\n          findMatchingVariation(defaultAttributes);\n        }\n      } else {\n        // Para productos simples, establecer el precio directamente\n        setTotalPrice(parseFloat(product.price) * quantity);\n      }\n\n      // Cargar Advanced Product Fields si existen\n      await loadProductAddons();\n      \n    } catch (err) {\n      console.error('Error loading product data:', err);\n      setError('Error al cargar las opciones del producto. Por favor, intenta de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadProductAddons = async () => {\n    console.log('=== BUSCANDO ADDONS ===');\n    \n    // Verificar si el producto tiene campos adicionales del plugin Advanced Product Fields\n    if (product.meta_data) {\n      console.log('Meta data encontrada:', product.meta_data);\n      \n      // Buscar el campo _wapf_fieldgroup\n      const fieldGroupData = product.meta_data.find(meta => meta.key === '_wapf_fieldgroup');\n      \n      if (fieldGroupData && fieldGroupData.value) {\n        console.log('Field group data encontrada:', fieldGroupData.value);\n        \n        // El valor puede ser un ID de grupo o un array de IDs\n        let groupIds = [];\n        if (Array.isArray(fieldGroupData.value)) {\n          groupIds = fieldGroupData.value;\n        } else if (typeof fieldGroupData.value === 'object' && fieldGroupData.value.groups) {\n          groupIds = fieldGroupData.value.groups;\n        } else if (typeof fieldGroupData.value === 'string' || typeof fieldGroupData.value === 'number') {\n          groupIds = [fieldGroupData.value];\n        }\n        \n        console.log('Group IDs:', groupIds);\n        \n        // Si tenemos IDs de grupos, necesitamos obtener los campos de esos grupos\n        // Para esto necesitamos hacer una petición adicional o el plugin debe exponer los campos\n        \n        // Por ahora, vamos a buscar si hay campos directamente en el producto\n        // El plugin también puede guardar los campos compilados en otro meta field\n        const possibleFieldKeys = [\n          '_wapf_fields',\n          '_wapf_field_groups_fields',\n          'wapf_fields',\n          '_product_addons'\n        ];\n        \n        for (const key of possibleFieldKeys) {\n          const fieldsData = product.meta_data.find(meta => meta.key === key);\n          if (fieldsData && fieldsData.value) {\n            console.log(`Campos encontrados con key \"${key}\":`, fieldsData.value);\n            const fields = Array.isArray(fieldsData.value) ? fieldsData.value : [fieldsData.value];\n            setProductAddons(fields);\n            initializeAddonValues(fields);\n            return;\n          }\n        }\n        \n        // Si no encontramos los campos compilados, intentamos obtenerlos via API personalizada\n        if (groupIds.length > 0 || true) { // Siempre intentar con la API personalizada\n          console.log('Intentando obtener campos del producto via API...');\n          console.log('ID del producto:', product.id);\n          \n          try {\n            // Construir la URL completa\n            const apiUrl = `https://escandalosospizzas.cl/wp/wp-json/custom/v1/product-fields/${product.id}`;\n            console.log('URL de la API:', apiUrl);\n            \n            const response = await fetch(apiUrl);\n            console.log('Status de respuesta:', response.status);\n            \n            if (response.ok) {\n              const data = await response.json();\n              console.log('Respuesta completa de la API:', data);\n              console.log('Tipo de respuesta:', typeof data);\n              console.log('Es array?:', Array.isArray(data));\n              console.log('Claves del objeto:', Object.keys(data));\n              console.log('Valores del objeto:', Object.values(data));\n              \n              // Intentar diferentes estructuras de respuesta\n              let fields = null;\n              \n              // ESTRUCTURA ESPECÍFICA DE WAPF (Advanced Product Fields)\n              if (data && data.field_groups && data.field_groups.fields) {\n                console.log('Campos encontrados en field_groups.fields');\n                fields = data.field_groups.fields;\n              }\n              // Si la respuesta es un array directo\n              else if (Array.isArray(data)) {\n                fields = data;\n              }\n              // Si los campos están en data.fields\n              else if (data && data.fields && Array.isArray(data.fields)) {\n                fields = data.fields;\n              }\n              // Si los campos están en data.data\n              else if (data && data.data) {\n                fields = data.data;\n              }\n              // Si la respuesta tiene una propiedad items\n              else if (data && data.items) {\n                fields = data.items;\n              }\n              // Si la respuesta tiene una propiedad addons\n              else if (data && data.addons) {\n                fields = data.addons;\n              }\n              // Si la respuesta tiene una propiedad product_fields\n              else if (data && data.product_fields) {\n                fields = data.product_fields;\n              }\n              // Si la respuesta es un objeto con campos como propiedades\n              else if (data && typeof data === 'object' && !Array.isArray(data)) {\n                // Buscar cualquier propiedad que sea un array\n                const keys = Object.keys(data);\n                for (const key of keys) {\n                  if (Array.isArray(data[key])) {\n                    console.log(`Encontrado array de campos en la propiedad: ${key}`);\n                    fields = data[key];\n                    break;\n                  }\n                }\n                \n                // Si no encontramos arrays, tal vez los campos están directamente en el objeto\n                if (!fields && keys.length > 0) {\n                  // Verificar si el objeto tiene estructura de campo\n                  const firstKey = keys[0];\n                  if (data[firstKey] && (data[firstKey].type || data[firstKey].label || data[firstKey].name)) {\n                    // Convertir el objeto en array\n                    fields = Object.values(data);\n                  }\n                }\n              }\n              \n              if (fields) {\n                console.log('Campos encontrados y procesados:', fields);\n                // Log de cada campo para debug\n                fields.forEach(field => {\n                  console.log('Campo individual:', {\n                    id: field.id,\n                    label: field.label,\n                    title: field.title,\n                    name: field.name,\n                    type: field.type,\n                    required: field.required,\n                    pricing: field.pricing,\n                    options: field.options\n                  });\n                });\n                setProductAddons(fields);\n                initializeAddonValues(fields);\n                return;\n              } else {\n                console.log('No se pudieron extraer campos de la respuesta');\n              }\n            } else {\n              console.log('La API devolvió un error:', response.status, response.statusText);\n            }\n          } catch (error) {\n            console.log('Error obteniendo campos via API:', error);\n          }\n        }\n      }\n    }\n    \n    // Si no encontramos campos via meta_data, verificar si están directamente en el producto\n    if (product.product_fields) {\n      console.log('Campos encontrados en product.product_fields:', product.product_fields);\n      setProductAddons(product.product_fields);\n      initializeAddonValues(product.product_fields);\n    } else if (product.addons) {\n      console.log('Campos encontrados en product.addons:', product.addons);\n      setProductAddons(product.addons);\n      initializeAddonValues(product.addons);\n    }\n    \n    console.log('=== ESTADO FINAL DE ADDONS ===');\n    console.log('productAddons establecidos:', productAddons);\n  };\n\n  const initializeAddonValues = (fields) => {\n    const defaultValues = {};\n    fields.forEach(field => {\n      const fieldId = field.id || field.name || field.field_id;\n      \n      if (field.type === 'checkbox' || field.type === 'checkboxes' || field.type === 'multiple_choice') {\n        defaultValues[fieldId] = [];\n      } else if (field.type === 'number' && field.min !== undefined) {\n        defaultValues[fieldId] = field.min;\n      } else if (field.type === 'true_false') {\n        defaultValues[fieldId] = false;\n      } else if (field.type === 'radio' || field.type === 'radiobutton') {\n        // Para radio buttons, buscar si hay una opción seleccionada por defecto\n        const choices = field.options?.choices || field.options || [];\n        const defaultChoice = choices.find(choice => choice.selected === true);\n        defaultValues[fieldId] = defaultChoice ? (defaultChoice.label || defaultChoice.value) : '';\n      } else {\n        defaultValues[fieldId] = '';\n      }\n    });\n    console.log('Valores iniciales de addons:', defaultValues);\n    setAddonValues(defaultValues);\n  };\n\n  const handleAttributeChange = (attributeName, value) => {\n    const newAttributes = {\n      ...selectedAttributes,\n      [attributeName]: value\n    };\n    setSelectedAttributes(newAttributes);\n    \n    // Buscar variación que coincida con los atributos seleccionados\n    findMatchingVariation(newAttributes);\n  };\n\n  const findMatchingVariation = (attributes) => {\n    if (!variations || variations.length === 0) return;\n    \n    const matching = variations.find(variation => {\n      return variation.attributes.every(attr => {\n        const normalizedAttrName = attr.name.toLowerCase().replace(/-/g, ' ');\n        const selectedValue = attributes[attr.name] || attributes[normalizedAttrName];\n        return selectedValue == attr.option;\n      });\n    });\n    \n    setSelectedVariation(matching || null);\n  };\n\n  const handleAddonChange = (fieldId, value) => {\n    setAddonValues(prev => ({\n      ...prev,\n      [fieldId]: value\n    }));\n  };\n\n  const handleFileUpload = (fieldId, file) => {\n    if (file) {\n      setAddonFiles(prev => ({\n        ...prev,\n        [fieldId]: file\n      }));\n      setAddonValues(prev => ({\n        ...prev,\n        [fieldId]: file.name\n      }));\n    }\n  };\n\n  const calculateAddonPrice = () => {\n    let addonTotal = 0;\n    \n    productAddons.forEach(addon => {\n      const fieldId = addon.id || addon.name;\n      const value = addonValues[fieldId];\n      \n      if (!value || (Array.isArray(value) && value.length === 0)) return;\n      \n      // Para WAPF, el precio puede estar en addon.pricing\n      if (addon.pricing && addon.pricing.enabled && addon.pricing.amount) {\n        if (addon.pricing.type === 'fixed') {\n          addonTotal += parseFloat(addon.pricing.amount);\n        } else if (addon.pricing.type === 'quantity_based') {\n          addonTotal += parseFloat(addon.pricing.amount) * quantity;\n        }\n      }\n      \n      // Precio fijo tradicional\n      else if (addon.price_type === 'flat_fee' && addon.price) {\n        addonTotal += parseFloat(addon.price);\n      }\n      \n      // Precio basado en cantidad\n      else if (addon.price_type === 'quantity_based' && addon.price) {\n        addonTotal += parseFloat(addon.price) * quantity;\n      }\n      \n      // Precio por carácter (para campos de texto)\n      else if (addon.price_type === 'per_char' && addon.price && typeof value === 'string') {\n        addonTotal += parseFloat(addon.price) * value.length;\n      }\n      \n      // Para campos con opciones (radio, select, checkbox)\n      else if ((addon.options?.choices || addon.options) && Array.isArray(addon.options?.choices || addon.options)) {\n        const options = addon.options?.choices || addon.options;\n        options.forEach(option => {\n          const isSelected = Array.isArray(value) \n            ? value.includes(option.label || option.value)\n            : value === (option.label || option.value);\n            \n          if (isSelected && (option.pricing_amount || option.price)) {\n            const optionPrice = option.pricing_amount || option.price;\n            if (option.pricing_type === 'quantity_based' || option.price_type === 'quantity_based') {\n              addonTotal += parseFloat(optionPrice) * quantity;\n            } else {\n              addonTotal += parseFloat(optionPrice);\n            }\n          }\n        });\n      }\n    });\n    \n    return addonTotal;\n  };\n\n  const updatePrice = () => {\n    let basePrice = 0;\n    \n    if (selectedVariation && selectedVariation.price) {\n      basePrice = parseFloat(selectedVariation.price);\n    } else if (product && product.price) {\n      basePrice = parseFloat(product.price);\n    }\n    \n    const addonPrice = calculateAddonPrice();\n    setTotalPrice((basePrice + addonPrice) * quantity);\n  };\n\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('es-CL', {\n      style: 'currency',\n      currency: 'CLP',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(price);\n  };\n\n  const isValidSelection = () => {\n    if (product.type === 'variable') {\n      // Para productos variables, verificar que se haya seleccionado una variación válida\n      if (!selectedVariation || selectedVariation.stock_status === 'outofstock') {\n        return false;\n      }\n    }\n    \n    // Validar campos requeridos de Advanced Product Fields\n    for (const addon of productAddons) {\n      if (addon.required) {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        \n        if (!value || (Array.isArray(value) && value.length === 0)) {\n          setError(`Por favor, completa el campo: ${addon.title || addon.name}`);\n          return false;\n        }\n      }\n    }\n    \n    return true;\n  };\n\n  const handleAddToCart = async () => {\n    if (!isValidSelection()) {\n      if (!error) {\n        setError('Por favor, selecciona todas las opciones requeridas');\n      }\n      return;\n    }\n\n    setAddingToCart(true);\n\n    try {\n      // Preparar meta_data para Advanced Product Fields\n      const addonMetaData = [];\n      \n      productAddons.forEach(addon => {\n        const fieldId = addon.id || addon.name;\n        const value = addonValues[fieldId];\n        \n        if (value && !(Array.isArray(value) && value.length === 0)) {\n          // Agregar el campo a meta_data\n          addonMetaData.push({\n            key: addon.name || addon.title,\n            value: Array.isArray(value) ? value.join(', ') : value,\n            display: addon.title || addon.name,\n            price: addon.price || 0,\n            price_type: addon.price_type || 'flat_fee'\n          });\n        }\n      });\n\n      const cartItem = {\n        id: selectedVariation ? `${product.id}-${selectedVariation.id}-${Date.now()}` : `${product.id}-${Date.now()}`,\n        productId: product.id,\n        variationId: selectedVariation?.id,\n        name: product.name,\n        price: totalPrice / quantity, // Precio unitario incluyendo addons\n        image: selectedVariation?.image?.src || product.images?.[0]?.src || '',\n        quantity,\n        customizations: {\n          attributes: selectedAttributes,\n          specialInstructions: specialInstructions.trim(),\n          variationDetails: selectedVariation ? {\n            name: selectedVariation.name,\n            attributes: selectedVariation.attributes\n          } : null,\n          // Agregar datos de Advanced Product Fields\n          productAddons: addonMetaData,\n          addonValues: addonValues,\n          addonFiles: Object.keys(addonFiles).length > 0 ? addonFiles : null\n        }\n      };\n\n      addToCart(cartItem);\n      \n      // Mostrar mensaje de éxito\n      setTimeout(() => {\n        onClose();\n        resetForm();\n      }, 500);\n      \n    } catch (err) {\n      setError('Error al agregar al carrito. Por favor, intenta de nuevo.');\n    } finally {\n      setAddingToCart(false);\n    }\n  };\n\n  const renderAddonField = (addon) => {\n    const fieldId = addon.id || addon.name;\n    const value = addonValues[fieldId] || '';\n    \n    switch (addon.type) {\n      case 'text':\n      case 'custom_text':\n        return (\n          <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            placeholder={addon.placeholder || ''}\n            maxLength={addon.max || undefined}\n            className=\"addon-text-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'textarea':\n      case 'custom_textarea':\n        return (\n          <textarea\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            placeholder={addon.placeholder || ''}\n            maxLength={addon.max || undefined}\n            rows={4}\n            className=\"addon-textarea\"\n            required={addon.required}\n          />\n        );\n        \n      case 'number':\n        return (\n          <input\n            type=\"number\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, parseFloat(e.target.value) || 0)}\n            min={addon.min || undefined}\n            max={addon.max || undefined}\n            step={addon.step || 1}\n            className=\"addon-number-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'email':\n        return (\n          <input\n            type=\"email\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            placeholder={addon.placeholder || 'email@ejemplo.com'}\n            className=\"addon-email-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'select':\n      case 'dropdown':\n        const selectOptions = addon.options?.choices || addon.options || [];\n        return (\n          <select\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            className=\"addon-select\"\n            required={addon.required}\n          >\n            <option value=\"\">Selecciona una opción</option>\n            {selectOptions.map((option, index) => (\n              <option key={index} value={option.label || option.value}>\n                {option.label || option.value}\n                {(option.pricing_amount && option.pricing_amount > 0) && ` (+${formatPrice(option.pricing_amount)})`}\n              </option>\n            ))}\n          </select>\n        );\n        \n      case 'radio':\n      case 'radiobutton':\n        // Obtener las opciones correctamente según la estructura de WAPF\n        const radioOptions = addon.options?.choices || addon.options || [];\n        return (\n          <div className=\"addon-radio-group\">\n            {radioOptions.map((option, index) => (\n              <label key={index} className=\"addon-radio-option\">\n                <input\n                  type=\"radio\"\n                  name={fieldId}\n                  value={option.label || option.value}\n                  checked={value === (option.label || option.value)}\n                  onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n                  required={addon.required}\n                />\n                <span className=\"radio-label\">\n                  {option.label || option.value}\n                  {(option.pricing_amount && option.pricing_amount > 0) && ` (+${formatPrice(option.pricing_amount)})`}\n                </span>\n              </label>\n            ))}\n          </div>\n        );\n        \n      case 'checkbox':\n      case 'checkboxes':\n      case 'multiple_choice':\n        const checkboxOptions = addon.options?.choices || addon.options || [];\n        return (\n          <div className=\"addon-checkbox-group\">\n            {checkboxOptions.map((option, index) => (\n              <label key={index} className=\"addon-checkbox-option\">\n                <input\n                  type=\"checkbox\"\n                  value={option.label || option.value}\n                  checked={Array.isArray(value) && value.includes(option.label || option.value)}\n                  onChange={(e) => {\n                    const optionValue = option.label || option.value;\n                    const currentValues = Array.isArray(value) ? value : [];\n                    \n                    if (e.target.checked) {\n                      handleAddonChange(fieldId, [...currentValues, optionValue]);\n                    } else {\n                      handleAddonChange(fieldId, currentValues.filter(v => v !== optionValue));\n                    }\n                  }}\n                />\n                <span className=\"checkbox-label\">\n                  {option.label || option.value}\n                  {(option.pricing_amount && option.pricing_amount > 0) && ` (+${formatPrice(option.pricing_amount)})`}\n                </span>\n              </label>\n            ))}\n          </div>\n        );\n        \n      case 'file':\n      case 'file_upload':\n        return (\n          <div className=\"addon-file-upload\">\n            <label className=\"file-upload-label\">\n              <input\n                type=\"file\"\n                onChange={(e) => handleFileUpload(fieldId, e.target.files[0])}\n                accept={addon.allowed_types || '*'}\n                required={addon.required}\n                className=\"file-input\"\n              />\n              <span className=\"file-upload-button\">\n                <Upload size={16} />\n                {addonFiles[fieldId] ? addonFiles[fieldId].name : 'Seleccionar archivo'}\n              </span>\n            </label>\n            {addon.max_size && (\n              <p className=\"file-size-info\">\n                Tamaño máximo: {addon.max_size}MB\n              </p>\n            )}\n          </div>\n        );\n        \n      case 'color':\n        return (\n          <input\n            type=\"color\"\n            value={value || '#000000'}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            className=\"addon-color-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'date':\n        return (\n          <input\n            type=\"date\"\n            value={value}\n            onChange={(e) => handleAddonChange(fieldId, e.target.value)}\n            min={addon.min_date || undefined}\n            max={addon.max_date || undefined}\n            className=\"addon-date-input\"\n            required={addon.required}\n          />\n        );\n        \n      case 'true_false':\n        return (\n          <label className=\"addon-checkbox-option\">\n            <input\n              type=\"checkbox\"\n              checked={value === true}\n              onChange={(e) => handleAddonChange(fieldId, e.target.checked)}\n              required={addon.required}\n            />\n            <span className=\"checkbox-label\">\n              {addon.true_label || 'Sí'}\n            </span>\n          </label>\n        );\n        \n      default:\n        console.log(`Tipo de campo no reconocido: ${addon.type}`);\n        return null;\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"customization-modal-overlay\" onClick={onClose}>\n      <div className=\"customization-modal\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"modal-close\" onClick={onClose}>\n          <X size={24} />\n        </button>\n        \n        <h2>Personalizar Pedido</h2>\n        \n        {loading ? (\n          <div className=\"loading-container\">\n            <Loader className=\"loading-spinner\" size={48} />\n            <p>Cargando opciones...</p>\n          </div>\n        ) : error ? (\n          <div className=\"error-container\">\n            <p className=\"error-message\">{error}</p>\n            <button onClick={loadProductData} className=\"retry-button\">\n              Reintentar\n            </button>\n          </div>\n        ) : (\n          <>\n            {/* Información del producto */}\n            <div className=\"customization-product-info\">\n              {product.images && product.images[0] ? (\n                <img \n                  src={product.images[0].src} \n                  alt={product.name} \n                  className=\"customization-product-image\"\n                />\n              ) : (\n                <div className=\"customization-product-image placeholder\">\n                  <Pizza size={48} />\n                </div>\n              )}\n              <div className=\"product-details\">\n                <h3>{product.name}</h3>\n                {product.short_description && (\n                  <p className=\"product-description\" \n                     dangerouslySetInnerHTML={{ __html: product.short_description }} />\n                )}\n              </div>\n            </div>\n\n            {/* Atributos de variación */}\n            {attributes.length > 0 && (\n              <div className=\"customization-section\">\n                {attributes.map(attribute => (\n                  <div key={attribute.id || attribute.name} className=\"attribute-section\">\n                    <h4>{attribute.name}</h4>\n                    {attribute.description && (\n                      <p className=\"section-description\">{attribute.description}</p>\n                    )}\n                    <div className=\"attribute-options\">\n                      {attribute.options.map(option => (\n                        <label key={option} className=\"attribute-option\">\n                          <input\n                            type=\"radio\"\n                            name={attribute.name}\n                            value={option}\n                            checked={selectedAttributes[attribute.name] === option}\n                            onChange={() => handleAttributeChange(attribute.name, option)}\n                          />\n                          <span className=\"option-label\">\n                            <span className=\"option-check\">\n                              <Check size={16} />\n                            </span>\n                            {option}\n                          </span>\n                        </label>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Advanced Product Fields */}\n            {productAddons.length > 0 && (\n              <div className=\"customization-section\">\n                <h4>Opciones adicionales</h4>\n                {productAddons.map((addon, index) => (\n                  <div key={addon.id || addon.name || index} className=\"addon-field\">\n                    <label className=\"addon-label\">\n                      {addon.label || addon.title || addon.name || 'Campo adicional'}\n                      {addon.required && <span className=\"required\">*</span>}\n                      {(addon.pricing?.enabled && addon.pricing?.amount > 0) && (\n                        <span className=\"addon-price\">\n                          {addon.pricing.type === 'quantity_based' \n                            ? ` (+${formatPrice(addon.pricing.amount)} por unidad)`\n                            : ` (+${formatPrice(addon.pricing.amount)})`\n                          }\n                        </span>\n                      )}\n                    </label>\n                    {addon.description && (\n                      <p className=\"addon-description\">{addon.description}</p>\n                    )}\n                    {renderAddonField(addon)}\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Mostrar información de la variación seleccionada */}\n            {selectedVariation && (selectedVariation.stock_status === 'outofstock' || \n              (selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10)) && (\n              <div className=\"variation-info\">\n                <div className=\"variation-details\">\n                  {selectedVariation.stock_status === 'outofstock' ? (\n                    <p className=\"out-of-stock\">⚠️ Producto agotado</p>\n                  ) : selectedVariation.stock_quantity && selectedVariation.stock_quantity < 10 ? (\n                    <p className=\"low-stock\">⚡ Últimas {selectedVariation.stock_quantity} unidades</p>\n                  ) : null}\n                </div>\n              </div>\n            )}\n\n            {/* Instrucciones especiales */}\n            <div className=\"customization-section\">\n              <h4>Instrucciones especiales (opcional)</h4>\n              <p className=\"section-description\">\n                ¿Alguna preferencia especial?\n              </p>\n              <textarea\n                className=\"special-instructions\"\n                value={specialInstructions}\n                onChange={(e) => setSpecialInstructions(e.target.value)}\n                placeholder=\"Ej: Sin cebolla, extra queso, etc.\"\n                rows={3}\n              />\n            </div>\n\n            {/* Cantidad y precio */}\n            <div className=\"quantity-price-section\">\n              <div className=\"quantity-selector\">\n                <h4>Cantidad</h4>\n                <div className=\"quantity-controls\">\n                  <button \n                    onClick={() => setQuantity(Math.max(1, quantity - 1))}\n                    disabled={quantity <= 1}\n                  >\n                    <Minus size={20} />\n                  </button>\n                  <span className=\"quantity-value\">{quantity}</span>\n                  <button \n                    onClick={() => setQuantity(quantity + 1)}\n                    disabled={selectedVariation?.stock_status === 'outofstock'}\n                  >\n                    <Plus size={20} />\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"price-info\">\n                <h4>Total</h4>\n                <p className=\"total-price\">{formatPrice(totalPrice)}</p>\n              </div>\n            </div>\n\n            {/* Botón agregar al carrito */}\n            <button \n              className={`add-to-cart-button ${addingToCart ? 'loading' : ''}`}\n              onClick={handleAddToCart}\n              disabled={addingToCart || (selectedVariation?.stock_status === 'outofstock')}\n            >\n              {addingToCart ? (\n                <>\n                  <Loader className=\"button-spinner\" size={20} />\n                  Agregando...\n                </>\n              ) : (\n                <>\n                  <ShoppingCart size={20} />\n                  Agregar al Carrito\n                </>\n              )}\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomizationModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}