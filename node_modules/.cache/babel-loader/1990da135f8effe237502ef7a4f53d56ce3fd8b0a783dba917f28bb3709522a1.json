{"ast":null,"code":"// src/services/woocommerceApi.js\nimport{getApiUrl,getAuthHeaders}from'../config/woocommerce';class WooCommerceAPI{// Método genérico para hacer peticiones\nasync request(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const url=getApiUrl(endpoint);const options={method,headers:getAuthHeaders()};if(data&&method!=='GET'){options.body=JSON.stringify(data);}console.log('Request URL:',url);console.log('Request options:',options);const response=await fetch(url,options);// Intentar obtener el cuerpo de la respuesta\nconst responseText=await response.text();let responseData;try{responseData=JSON.parse(responseText);}catch(e){responseData=responseText;}if(!response.ok){console.error('Error response:',responseData);throw new Error(`Error ${response.status}: ${responseData.message||responseData.code||response.statusText}`);}return responseData;}catch(error){console.error('Error en la petición a WooCommerce:',error);throw error;}}// === PRODUCTOS ===\n// Obtener todos los productos\nasync getProducts(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const queryParams=new URLSearchParams({per_page:100,...params}).toString();return this.request(`products?${queryParams}`);}// Obtener un producto por ID\nasync getProduct(id){return this.request(`products/${id}`);}// Obtener variaciones de un producto\nasync getProductVariations(productId){return this.request(`products/${productId}/variations?per_page=100`);}// Obtener atributos de productos\nasync getProductAttributes(){return this.request('products/attributes');}// Obtener términos de un atributo\nasync getAttributeTerms(attributeId){return this.request(`products/attributes/${attributeId}/terms`);}// Obtener categorías de productos\nasync getCategories(){return this.request('products/categories?per_page=100');}// === PEDIDOS ===\n// Crear un nuevo pedido\nasync createOrder(orderData){var _orderData$shipping$c;const order={payment_method:orderData.paymentMethod||'cash',payment_method_title:orderData.paymentMethodTitle||'Pago en efectivo',set_paid:false,status:'pending',billing:{first_name:orderData.customerName,last_name:'',address_1:orderData.address||'',city:orderData.city||'Santiago',state:'',postcode:'',country:'CL',email:orderData.email||'',phone:orderData.phone||''},shipping:{first_name:orderData.customerName,last_name:'',address_1:orderData.address||'',city:orderData.city||'Santiago',state:'',postcode:'',country:'CL'},line_items:orderData.items.map(item=>{const lineItem={product_id:parseInt(item.productId),quantity:parseInt(item.quantity)};// Si tiene variación, agregar variation_id\nif(item.variationId){lineItem.variation_id=parseInt(item.variationId);}// Si tiene meta data (personalizaciones)\nif(item.customizations){var _item$customizations$,_item$customizations$2,_item$customizations$3;lineItem.meta_data=[];if(((_item$customizations$=item.customizations.extraIngredients)===null||_item$customizations$===void 0?void 0:_item$customizations$.length)>0){lineItem.meta_data.push({key:'ingredientes_extra',value:item.customizations.extraIngredients.map(i=>i.name).join(', ')});}if(((_item$customizations$2=item.customizations.removedIngredients)===null||_item$customizations$2===void 0?void 0:_item$customizations$2.length)>0){lineItem.meta_data.push({key:'ingredientes_removidos',value:item.customizations.removedIngredients.join(', ')});}if(item.customizations.specialInstructions){lineItem.meta_data.push({key:'instrucciones_especiales',value:item.customizations.specialInstructions});}// Agregar campos de Advanced Product Fields\nif(((_item$customizations$3=item.customizations.productAddons)===null||_item$customizations$3===void 0?void 0:_item$customizations$3.length)>0){item.customizations.productAddons.forEach(addon=>{lineItem.meta_data.push({key:addon.key,value:addon.value,display_key:addon.display||addon.key,display_value:addon.value});});}}return lineItem;}),shipping_lines:orderData.shipping?[{method_id:orderData.shipping.method_id||'flat_rate',method_title:orderData.shipping.method_title||'Envío a domicilio',total:((_orderData$shipping$c=orderData.shipping.cost)===null||_orderData$shipping$c===void 0?void 0:_orderData$shipping$c.toString())||'0'}]:[]};return this.request('orders','POST',order);}// Obtener un pedido\nasync getOrder(orderId){return this.request(`orders/${orderId}`);}// Actualizar estado de un pedido\nasync updateOrderStatus(orderId,status){return this.request(`orders/${orderId}`,'PUT',{status});}// === CLIENTES ===\n// Crear cliente\nasync createCustomer(customerData){return this.request('customers','POST',customerData);}// Obtener cliente\nasync getCustomer(customerId){return this.request(`customers/${customerId}`);}}export default new WooCommerceAPI();","map":{"version":3,"names":["getApiUrl","getAuthHeaders","WooCommerceAPI","request","endpoint","method","arguments","length","undefined","data","url","options","headers","body","JSON","stringify","console","log","response","fetch","responseText","text","responseData","parse","e","ok","error","Error","status","message","code","statusText","getProducts","params","queryParams","URLSearchParams","per_page","toString","getProduct","id","getProductVariations","productId","getProductAttributes","getAttributeTerms","attributeId","getCategories","createOrder","orderData","_orderData$shipping$c","order","payment_method","paymentMethod","payment_method_title","paymentMethodTitle","set_paid","billing","first_name","customerName","last_name","address_1","address","city","state","postcode","country","email","phone","shipping","line_items","items","map","item","lineItem","product_id","parseInt","quantity","variationId","variation_id","customizations","_item$customizations$","_item$customizations$2","_item$customizations$3","meta_data","extraIngredients","push","key","value","i","name","join","removedIngredients","specialInstructions","productAddons","forEach","addon","display_key","display","display_value","shipping_lines","method_id","method_title","total","cost","getOrder","orderId","updateOrderStatus","createCustomer","customerData","getCustomer","customerId"],"sources":["/Users/franciscalabra/Desktop/pizzeria-escandalosos/src/services/woocommerceApi.js"],"sourcesContent":["// src/services/woocommerceApi.js\nimport { getApiUrl, getAuthHeaders } from '../config/woocommerce';\n\nclass WooCommerceAPI {\n  // Método genérico para hacer peticiones\n  async request(endpoint, method = 'GET', data = null) {\n    try {\n      const url = getApiUrl(endpoint);\n      const options = {\n        method,\n        headers: getAuthHeaders(),\n      };\n\n      if (data && method !== 'GET') {\n        options.body = JSON.stringify(data);\n      }\n\n      console.log('Request URL:', url);\n      console.log('Request options:', options);\n\n      const response = await fetch(url, options);\n      \n      // Intentar obtener el cuerpo de la respuesta\n      const responseText = await response.text();\n      let responseData;\n      \n      try {\n        responseData = JSON.parse(responseText);\n      } catch (e) {\n        responseData = responseText;\n      }\n\n      if (!response.ok) {\n        console.error('Error response:', responseData);\n        throw new Error(`Error ${response.status}: ${responseData.message || responseData.code || response.statusText}`);\n      }\n\n      return responseData;\n    } catch (error) {\n      console.error('Error en la petición a WooCommerce:', error);\n      throw error;\n    }\n  }\n\n  // === PRODUCTOS ===\n  \n  // Obtener todos los productos\n  async getProducts(params = {}) {\n    const queryParams = new URLSearchParams({\n      per_page: 100,\n      ...params\n    }).toString();\n    \n    return this.request(`products?${queryParams}`);\n  }\n\n  // Obtener un producto por ID\n  async getProduct(id) {\n    return this.request(`products/${id}`);\n  }\n\n  // Obtener variaciones de un producto\n  async getProductVariations(productId) {\n    return this.request(`products/${productId}/variations?per_page=100`);\n  }\n\n  // Obtener atributos de productos\n  async getProductAttributes() {\n    return this.request('products/attributes');\n  }\n\n  // Obtener términos de un atributo\n  async getAttributeTerms(attributeId) {\n    return this.request(`products/attributes/${attributeId}/terms`);\n  }\n\n  // Obtener categorías de productos\n  async getCategories() {\n    return this.request('products/categories?per_page=100');\n  }\n\n  // === PEDIDOS ===\n  \n  // Crear un nuevo pedido\n  async createOrder(orderData) {\n    const order = {\n      payment_method: orderData.paymentMethod || 'cash',\n      payment_method_title: orderData.paymentMethodTitle || 'Pago en efectivo',\n      set_paid: false,\n      status: 'pending',\n      billing: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        city: orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL',\n        email: orderData.email || '',\n        phone: orderData.phone || ''\n      },\n      shipping: {\n        first_name: orderData.customerName,\n        last_name: '',\n        address_1: orderData.address || '',\n        city: orderData.city || 'Santiago',\n        state: '',\n        postcode: '',\n        country: 'CL'\n      },\n      line_items: orderData.items.map(item => {\n        const lineItem = {\n          product_id: parseInt(item.productId),\n          quantity: parseInt(item.quantity)\n        };\n\n        // Si tiene variación, agregar variation_id\n        if (item.variationId) {\n          lineItem.variation_id = parseInt(item.variationId);\n        }\n\n        // Si tiene meta data (personalizaciones)\n        if (item.customizations) {\n          lineItem.meta_data = [];\n          \n          if (item.customizations.extraIngredients?.length > 0) {\n            lineItem.meta_data.push({\n              key: 'ingredientes_extra',\n              value: item.customizations.extraIngredients.map(i => i.name).join(', ')\n            });\n          }\n\n          if (item.customizations.removedIngredients?.length > 0) {\n            lineItem.meta_data.push({\n              key: 'ingredientes_removidos',\n              value: item.customizations.removedIngredients.join(', ')\n            });\n          }\n\n          if (item.customizations.specialInstructions) {\n            lineItem.meta_data.push({\n              key: 'instrucciones_especiales',\n              value: item.customizations.specialInstructions\n            });\n          }\n\n          // Agregar campos de Advanced Product Fields\n          if (item.customizations.productAddons?.length > 0) {\n            item.customizations.productAddons.forEach(addon => {\n              lineItem.meta_data.push({\n                key: addon.key,\n                value: addon.value,\n                display_key: addon.display || addon.key,\n                display_value: addon.value\n              });\n            });\n          }\n        }\n\n        return lineItem;\n      }),\n      shipping_lines: orderData.shipping ? [{\n        method_id: orderData.shipping.method_id || 'flat_rate',\n        method_title: orderData.shipping.method_title || 'Envío a domicilio',\n        total: orderData.shipping.cost?.toString() || '0'\n      }] : []\n    };\n\n    return this.request('orders', 'POST', order);\n  }\n\n  // Obtener un pedido\n  async getOrder(orderId) {\n    return this.request(`orders/${orderId}`);\n  }\n\n  // Actualizar estado de un pedido\n  async updateOrderStatus(orderId, status) {\n    return this.request(`orders/${orderId}`, 'PUT', { status });\n  }\n\n  // === CLIENTES ===\n  \n  // Crear cliente\n  async createCustomer(customerData) {\n    return this.request('customers', 'POST', customerData);\n  }\n\n  // Obtener cliente\n  async getCustomer(customerId) {\n    return this.request(`customers/${customerId}`);\n  }\n}\n\nexport default new WooCommerceAPI();"],"mappings":"AAAA;AACA,OAASA,SAAS,CAAEC,cAAc,KAAQ,uBAAuB,CAEjE,KAAM,CAAAC,cAAe,CACnB;AACA,KAAM,CAAAC,OAAOA,CAACC,QAAQ,CAA+B,IAA7B,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,IAAE,CAAAG,IAAI,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACjD,GAAI,CACF,KAAM,CAAAI,GAAG,CAAGV,SAAS,CAACI,QAAQ,CAAC,CAC/B,KAAM,CAAAO,OAAO,CAAG,CACdN,MAAM,CACNO,OAAO,CAAEX,cAAc,CAAC,CAC1B,CAAC,CAED,GAAIQ,IAAI,EAAIJ,MAAM,GAAK,KAAK,CAAE,CAC5BM,OAAO,CAACE,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CACrC,CAEAO,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEP,GAAG,CAAC,CAChCM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEN,OAAO,CAAC,CAExC,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACT,GAAG,CAAEC,OAAO,CAAC,CAE1C;AACA,KAAM,CAAAS,YAAY,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC1C,GAAI,CAAAC,YAAY,CAEhB,GAAI,CACFA,YAAY,CAAGR,IAAI,CAACS,KAAK,CAACH,YAAY,CAAC,CACzC,CAAE,MAAOI,CAAC,CAAE,CACVF,YAAY,CAAGF,YAAY,CAC7B,CAEA,GAAI,CAACF,QAAQ,CAACO,EAAE,CAAE,CAChBT,OAAO,CAACU,KAAK,CAAC,iBAAiB,CAAEJ,YAAY,CAAC,CAC9C,KAAM,IAAI,CAAAK,KAAK,CAAC,SAAST,QAAQ,CAACU,MAAM,KAAKN,YAAY,CAACO,OAAO,EAAIP,YAAY,CAACQ,IAAI,EAAIZ,QAAQ,CAACa,UAAU,EAAE,CAAC,CAClH,CAEA,MAAO,CAAAT,YAAY,CACrB,CAAE,MAAOI,KAAK,CAAE,CACdV,OAAO,CAACU,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC3D,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AAEA;AACA,KAAM,CAAAM,WAAWA,CAAA,CAAc,IAAb,CAAAC,MAAM,CAAA3B,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC3B,KAAM,CAAA4B,WAAW,CAAG,GAAI,CAAAC,eAAe,CAAC,CACtCC,QAAQ,CAAE,GAAG,CACb,GAAGH,MACL,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAEb,MAAO,KAAI,CAAClC,OAAO,CAAC,YAAY+B,WAAW,EAAE,CAAC,CAChD,CAEA;AACA,KAAM,CAAAI,UAAUA,CAACC,EAAE,CAAE,CACnB,MAAO,KAAI,CAACpC,OAAO,CAAC,YAAYoC,EAAE,EAAE,CAAC,CACvC,CAEA;AACA,KAAM,CAAAC,oBAAoBA,CAACC,SAAS,CAAE,CACpC,MAAO,KAAI,CAACtC,OAAO,CAAC,YAAYsC,SAAS,0BAA0B,CAAC,CACtE,CAEA;AACA,KAAM,CAAAC,oBAAoBA,CAAA,CAAG,CAC3B,MAAO,KAAI,CAACvC,OAAO,CAAC,qBAAqB,CAAC,CAC5C,CAEA;AACA,KAAM,CAAAwC,iBAAiBA,CAACC,WAAW,CAAE,CACnC,MAAO,KAAI,CAACzC,OAAO,CAAC,uBAAuByC,WAAW,QAAQ,CAAC,CACjE,CAEA;AACA,KAAM,CAAAC,aAAaA,CAAA,CAAG,CACpB,MAAO,KAAI,CAAC1C,OAAO,CAAC,kCAAkC,CAAC,CACzD,CAEA;AAEA;AACA,KAAM,CAAA2C,WAAWA,CAACC,SAAS,CAAE,KAAAC,qBAAA,CAC3B,KAAM,CAAAC,KAAK,CAAG,CACZC,cAAc,CAAEH,SAAS,CAACI,aAAa,EAAI,MAAM,CACjDC,oBAAoB,CAAEL,SAAS,CAACM,kBAAkB,EAAI,kBAAkB,CACxEC,QAAQ,CAAE,KAAK,CACf1B,MAAM,CAAE,SAAS,CACjB2B,OAAO,CAAE,CACPC,UAAU,CAAET,SAAS,CAACU,YAAY,CAClCC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAEZ,SAAS,CAACa,OAAO,EAAI,EAAE,CAClCC,IAAI,CAAEd,SAAS,CAACc,IAAI,EAAI,UAAU,CAClCC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAElB,SAAS,CAACkB,KAAK,EAAI,EAAE,CAC5BC,KAAK,CAAEnB,SAAS,CAACmB,KAAK,EAAI,EAC5B,CAAC,CACDC,QAAQ,CAAE,CACRX,UAAU,CAAET,SAAS,CAACU,YAAY,CAClCC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAEZ,SAAS,CAACa,OAAO,EAAI,EAAE,CAClCC,IAAI,CAAEd,SAAS,CAACc,IAAI,EAAI,UAAU,CAClCC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,IACX,CAAC,CACDI,UAAU,CAAErB,SAAS,CAACsB,KAAK,CAACC,GAAG,CAACC,IAAI,EAAI,CACtC,KAAM,CAAAC,QAAQ,CAAG,CACfC,UAAU,CAAEC,QAAQ,CAACH,IAAI,CAAC9B,SAAS,CAAC,CACpCkC,QAAQ,CAAED,QAAQ,CAACH,IAAI,CAACI,QAAQ,CAClC,CAAC,CAED;AACA,GAAIJ,IAAI,CAACK,WAAW,CAAE,CACpBJ,QAAQ,CAACK,YAAY,CAAGH,QAAQ,CAACH,IAAI,CAACK,WAAW,CAAC,CACpD,CAEA;AACA,GAAIL,IAAI,CAACO,cAAc,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CACvBT,QAAQ,CAACU,SAAS,CAAG,EAAE,CAEvB,GAAI,EAAAH,qBAAA,CAAAR,IAAI,CAACO,cAAc,CAACK,gBAAgB,UAAAJ,qBAAA,iBAApCA,qBAAA,CAAsCxE,MAAM,EAAG,CAAC,CAAE,CACpDiE,QAAQ,CAACU,SAAS,CAACE,IAAI,CAAC,CACtBC,GAAG,CAAE,oBAAoB,CACzBC,KAAK,CAAEf,IAAI,CAACO,cAAc,CAACK,gBAAgB,CAACb,GAAG,CAACiB,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CACxE,CAAC,CAAC,CACJ,CAEA,GAAI,EAAAT,sBAAA,CAAAT,IAAI,CAACO,cAAc,CAACY,kBAAkB,UAAAV,sBAAA,iBAAtCA,sBAAA,CAAwCzE,MAAM,EAAG,CAAC,CAAE,CACtDiE,QAAQ,CAACU,SAAS,CAACE,IAAI,CAAC,CACtBC,GAAG,CAAE,wBAAwB,CAC7BC,KAAK,CAAEf,IAAI,CAACO,cAAc,CAACY,kBAAkB,CAACD,IAAI,CAAC,IAAI,CACzD,CAAC,CAAC,CACJ,CAEA,GAAIlB,IAAI,CAACO,cAAc,CAACa,mBAAmB,CAAE,CAC3CnB,QAAQ,CAACU,SAAS,CAACE,IAAI,CAAC,CACtBC,GAAG,CAAE,0BAA0B,CAC/BC,KAAK,CAAEf,IAAI,CAACO,cAAc,CAACa,mBAC7B,CAAC,CAAC,CACJ,CAEA;AACA,GAAI,EAAAV,sBAAA,CAAAV,IAAI,CAACO,cAAc,CAACc,aAAa,UAAAX,sBAAA,iBAAjCA,sBAAA,CAAmC1E,MAAM,EAAG,CAAC,CAAE,CACjDgE,IAAI,CAACO,cAAc,CAACc,aAAa,CAACC,OAAO,CAACC,KAAK,EAAI,CACjDtB,QAAQ,CAACU,SAAS,CAACE,IAAI,CAAC,CACtBC,GAAG,CAAES,KAAK,CAACT,GAAG,CACdC,KAAK,CAAEQ,KAAK,CAACR,KAAK,CAClBS,WAAW,CAAED,KAAK,CAACE,OAAO,EAAIF,KAAK,CAACT,GAAG,CACvCY,aAAa,CAAEH,KAAK,CAACR,KACvB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CACF,CAEA,MAAO,CAAAd,QAAQ,CACjB,CAAC,CAAC,CACF0B,cAAc,CAAEnD,SAAS,CAACoB,QAAQ,CAAG,CAAC,CACpCgC,SAAS,CAAEpD,SAAS,CAACoB,QAAQ,CAACgC,SAAS,EAAI,WAAW,CACtDC,YAAY,CAAErD,SAAS,CAACoB,QAAQ,CAACiC,YAAY,EAAI,mBAAmB,CACpEC,KAAK,CAAE,EAAArD,qBAAA,CAAAD,SAAS,CAACoB,QAAQ,CAACmC,IAAI,UAAAtD,qBAAA,iBAAvBA,qBAAA,CAAyBX,QAAQ,CAAC,CAAC,GAAI,GAChD,CAAC,CAAC,CAAG,EACP,CAAC,CAED,MAAO,KAAI,CAAClC,OAAO,CAAC,QAAQ,CAAE,MAAM,CAAE8C,KAAK,CAAC,CAC9C,CAEA;AACA,KAAM,CAAAsD,QAAQA,CAACC,OAAO,CAAE,CACtB,MAAO,KAAI,CAACrG,OAAO,CAAC,UAAUqG,OAAO,EAAE,CAAC,CAC1C,CAEA;AACA,KAAM,CAAAC,iBAAiBA,CAACD,OAAO,CAAE5E,MAAM,CAAE,CACvC,MAAO,KAAI,CAACzB,OAAO,CAAC,UAAUqG,OAAO,EAAE,CAAE,KAAK,CAAE,CAAE5E,MAAO,CAAC,CAAC,CAC7D,CAEA;AAEA;AACA,KAAM,CAAA8E,cAAcA,CAACC,YAAY,CAAE,CACjC,MAAO,KAAI,CAACxG,OAAO,CAAC,WAAW,CAAE,MAAM,CAAEwG,YAAY,CAAC,CACxD,CAEA;AACA,KAAM,CAAAC,WAAWA,CAACC,UAAU,CAAE,CAC5B,MAAO,KAAI,CAAC1G,OAAO,CAAC,aAAa0G,UAAU,EAAE,CAAC,CAChD,CACF,CAEA,cAAe,IAAI,CAAA3G,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}