{"ast":null,"code":"// src/context/CartContext.jsx\nimport React,{createContext,useState,useEffect,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CartContext=/*#__PURE__*/createContext();export const CartProvider=_ref=>{let{children}=_ref;// Inicializar carrito desde localStorage\nconst[cart,setCart]=useState(()=>{const savedCart=localStorage.getItem('pizza_cart');return savedCart?JSON.parse(savedCart):[];});// Estado para notificaciones\nconst[notification,setNotification]=useState(null);// Guardar carrito en localStorage cuando cambie\nuseEffect(()=>{localStorage.setItem('pizza_cart',JSON.stringify(cart));},[cart]);// Función para mostrar notificaciones\nconst showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';setNotification({message,type});setTimeout(()=>setNotification(null),3000);};// Agregar al carrito\nconst addToCart=useCallback(item=>{setCart(prevCart=>{// Crear un ID único para el item basado en sus atributos\nconst itemId=item.id||`${item.productId}-${Date.now()}`;// Para productos personalizables, siempre agregar como nuevo item\nif(item.customizations&&Object.keys(item.customizations).length>0){const newItem={...item,id:itemId,addedAt:new Date().toISOString()};showNotification(`${item.name} agregado al carrito`,'success');return[...prevCart,newItem];}// Para productos simples, buscar si ya existe\nconst existingItemIndex=prevCart.findIndex(cartItem=>cartItem.productId===item.productId&&(!cartItem.customizations||Object.keys(cartItem.customizations).length===0));if(existingItemIndex>-1){// Si existe, aumentar cantidad\nconst updatedCart=[...prevCart];updatedCart[existingItemIndex]={...updatedCart[existingItemIndex],quantity:updatedCart[existingItemIndex].quantity+(item.quantity||1)};showNotification(`${item.name} actualizado en el carrito`,'success');return updatedCart;}// Si no existe, agregar nuevo\nconst newItem={...item,id:itemId,quantity:item.quantity||1,addedAt:new Date().toISOString()};showNotification(`${item.name} agregado al carrito`,'success');return[...prevCart,newItem];});},[]);// Remover del carrito\nconst removeFromCart=useCallback(itemId=>{setCart(prevCart=>{const item=prevCart.find(item=>item.id===itemId);if(item){showNotification(`${item.name} eliminado del carrito`,'info');}return prevCart.filter(item=>item.id!==itemId);});},[]);// Actualizar cantidad\nconst updateQuantity=useCallback((itemId,newQuantity)=>{if(newQuantity<=0){removeFromCart(itemId);return;}setCart(prevCart=>prevCart.map(item=>item.id===itemId?{...item,quantity:newQuantity}:item));},[removeFromCart]);// Limpiar carrito\nconst clearCart=useCallback(()=>{setCart([]);showNotification('Carrito vaciado','info');},[]);// Obtener total del carrito\nconst getCartTotal=useCallback(()=>{return cart.reduce((total,item)=>{const itemPrice=parseFloat(item.price)||0;const itemQuantity=parseInt(item.quantity)||1;return total+itemPrice*itemQuantity;},0);},[cart]);// Obtener cantidad de items\nconst getItemCount=useCallback(()=>{return cart.reduce((total,item)=>total+(item.quantity||1),0);},[cart]);// Obtener un item específico\nconst getCartItem=useCallback(itemId=>{return cart.find(item=>item.id===itemId);},[cart]);// Verificar si un producto está en el carrito\nconst isInCart=useCallback(productId=>{return cart.some(item=>item.productId===productId);},[cart]);// Obtener descripción de personalizaciones\nconst getCustomizationDescription=customizations=>{if(!customizations||Object.keys(customizations).length===0){return'';}const parts=[];if(customizations.attributes){Object.entries(customizations.attributes).forEach(_ref2=>{let[key,value]=_ref2;parts.push(`${key}: ${value}`);});}if(customizations.specialInstructions){parts.push(`Nota: ${customizations.specialInstructions}`);}return parts.join(' | ');};const value={cart,notification,addToCart,removeFromCart,updateQuantity,clearCart,getCartTotal,getItemCount,getCartItem,isInCart,getCustomizationDescription};return/*#__PURE__*/_jsxs(CartContext.Provider,{value:value,children:[children,notification&&/*#__PURE__*/_jsx(\"div\",{className:`cart-notification ${notification.type}`,children:notification.message})]});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","CartContext","CartProvider","_ref","children","cart","setCart","savedCart","localStorage","getItem","JSON","parse","notification","setNotification","setItem","stringify","showNotification","message","type","arguments","length","undefined","setTimeout","addToCart","item","prevCart","itemId","id","productId","Date","now","customizations","Object","keys","newItem","addedAt","toISOString","name","existingItemIndex","findIndex","cartItem","updatedCart","quantity","removeFromCart","find","filter","updateQuantity","newQuantity","map","clearCart","getCartTotal","reduce","total","itemPrice","parseFloat","price","itemQuantity","parseInt","getItemCount","getCartItem","isInCart","some","getCustomizationDescription","parts","attributes","entries","forEach","_ref2","key","value","push","specialInstructions","join","Provider","className"],"sources":["/Users/franciscalabra/Desktop/escandalosos/src/context/CartContext.jsx"],"sourcesContent":["// src/context/CartContext.jsx\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  // Inicializar carrito desde localStorage\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem('pizza_cart');\n    return savedCart ? JSON.parse(savedCart) : [];\n  });\n\n  // Estado para notificaciones\n  const [notification, setNotification] = useState(null);\n\n  // Guardar carrito en localStorage cuando cambie\n  useEffect(() => {\n    localStorage.setItem('pizza_cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Función para mostrar notificaciones\n  const showNotification = (message, type = 'success') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  // Agregar al carrito\n  const addToCart = useCallback((item) => {\n    setCart(prevCart => {\n      // Crear un ID único para el item basado en sus atributos\n      const itemId = item.id || `${item.productId}-${Date.now()}`;\n      \n      // Para productos personalizables, siempre agregar como nuevo item\n      if (item.customizations && Object.keys(item.customizations).length > 0) {\n        const newItem = {\n          ...item,\n          id: itemId,\n          addedAt: new Date().toISOString()\n        };\n        showNotification(`${item.name} agregado al carrito`, 'success');\n        return [...prevCart, newItem];\n      }\n      \n      // Para productos simples, buscar si ya existe\n      const existingItemIndex = prevCart.findIndex(\n        cartItem => cartItem.productId === item.productId && \n                   (!cartItem.customizations || Object.keys(cartItem.customizations).length === 0)\n      );\n      \n      if (existingItemIndex > -1) {\n        // Si existe, aumentar cantidad\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: updatedCart[existingItemIndex].quantity + (item.quantity || 1)\n        };\n        showNotification(`${item.name} actualizado en el carrito`, 'success');\n        return updatedCart;\n      }\n      \n      // Si no existe, agregar nuevo\n      const newItem = {\n        ...item,\n        id: itemId,\n        quantity: item.quantity || 1,\n        addedAt: new Date().toISOString()\n      };\n      showNotification(`${item.name} agregado al carrito`, 'success');\n      return [...prevCart, newItem];\n    });\n  }, []);\n\n  // Remover del carrito\n  const removeFromCart = useCallback((itemId) => {\n    setCart(prevCart => {\n      const item = prevCart.find(item => item.id === itemId);\n      if (item) {\n        showNotification(`${item.name} eliminado del carrito`, 'info');\n      }\n      return prevCart.filter(item => item.id !== itemId);\n    });\n  }, []);\n\n  // Actualizar cantidad\n  const updateQuantity = useCallback((itemId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(itemId);\n      return;\n    }\n    \n    setCart(prevCart => \n      prevCart.map(item => \n        item.id === itemId \n          ? { ...item, quantity: newQuantity }\n          : item\n      )\n    );\n  }, [removeFromCart]);\n\n  // Limpiar carrito\n  const clearCart = useCallback(() => {\n    setCart([]);\n    showNotification('Carrito vaciado', 'info');\n  }, []);\n\n  // Obtener total del carrito\n  const getCartTotal = useCallback(() => {\n    return cart.reduce((total, item) => {\n      const itemPrice = parseFloat(item.price) || 0;\n      const itemQuantity = parseInt(item.quantity) || 1;\n      return total + (itemPrice * itemQuantity);\n    }, 0);\n  }, [cart]);\n\n  // Obtener cantidad de items\n  const getItemCount = useCallback(() => {\n    return cart.reduce((total, item) => total + (item.quantity || 1), 0);\n  }, [cart]);\n\n  // Obtener un item específico\n  const getCartItem = useCallback((itemId) => {\n    return cart.find(item => item.id === itemId);\n  }, [cart]);\n\n  // Verificar si un producto está en el carrito\n  const isInCart = useCallback((productId) => {\n    return cart.some(item => item.productId === productId);\n  }, [cart]);\n\n  // Obtener descripción de personalizaciones\n  const getCustomizationDescription = (customizations) => {\n    if (!customizations || Object.keys(customizations).length === 0) {\n      return '';\n    }\n    \n    const parts = [];\n    \n    if (customizations.attributes) {\n      Object.entries(customizations.attributes).forEach(([key, value]) => {\n        parts.push(`${key}: ${value}`);\n      });\n    }\n    \n    if (customizations.specialInstructions) {\n      parts.push(`Nota: ${customizations.specialInstructions}`);\n    }\n    \n    return parts.join(' | ');\n  };\n\n  const value = {\n    cart,\n    notification,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getItemCount,\n    getCartItem,\n    isInCart,\n    getCustomizationDescription\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n      {/* Notificación Global */}\n      {notification && (\n        <div className={`cart-notification ${notification.type}`}>\n          {notification.message}\n        </div>\n      )}\n    </CartContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}